// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/events.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EventType defines the types of events that can be published across services
type EventType int32

const (
	EventType_EVENT_TYPE_UNSPECIFIED EventType = 0
	// Inventory events
	EventType_INVENTORY_LEVEL_CHANGED         EventType = 100
	EventType_INVENTORY_LOW_STOCK_ALERT       EventType = 101
	EventType_INVENTORY_CONSUMPTION_PREDICTED EventType = 102
	// Task events
	EventType_TASK_CREATED       EventType = 200
	EventType_TASK_STAGE_CHANGED EventType = 201
	EventType_TASK_COMPLETED     EventType = 202
	EventType_TASK_ASSIGNED      EventType = 203
	// Home management events
	EventType_GROUP_TASK_ASSIGNED     EventType = 300
	EventType_SCHEDULE_TRIGGER        EventType = 301
	EventType_PIPELINE_WORK_STARTED   EventType = 302
	EventType_PIPELINE_WORK_COMPLETED EventType = 303
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0:   "EVENT_TYPE_UNSPECIFIED",
		100: "INVENTORY_LEVEL_CHANGED",
		101: "INVENTORY_LOW_STOCK_ALERT",
		102: "INVENTORY_CONSUMPTION_PREDICTED",
		200: "TASK_CREATED",
		201: "TASK_STAGE_CHANGED",
		202: "TASK_COMPLETED",
		203: "TASK_ASSIGNED",
		300: "GROUP_TASK_ASSIGNED",
		301: "SCHEDULE_TRIGGER",
		302: "PIPELINE_WORK_STARTED",
		303: "PIPELINE_WORK_COMPLETED",
	}
	EventType_value = map[string]int32{
		"EVENT_TYPE_UNSPECIFIED":          0,
		"INVENTORY_LEVEL_CHANGED":         100,
		"INVENTORY_LOW_STOCK_ALERT":       101,
		"INVENTORY_CONSUMPTION_PREDICTED": 102,
		"TASK_CREATED":                    200,
		"TASK_STAGE_CHANGED":              201,
		"TASK_COMPLETED":                  202,
		"TASK_ASSIGNED":                   203,
		"GROUP_TASK_ASSIGNED":             300,
		"SCHEDULE_TRIGGER":                301,
		"PIPELINE_WORK_STARTED":           302,
		"PIPELINE_WORK_COMPLETED":         303,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_proto_events_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{0}
}

// Event represents a system-wide event that can be published and consumed
type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                       // Unique event identifier
	Type          EventType              `protobuf:"varint,2,opt,name=type,proto3,enum=shared.events.v1.EventType" json:"type,omitempty"`                                                  // Type of event
	SourceService string                 `protobuf:"bytes,3,opt,name=source_service,json=sourceService,proto3" json:"source_service,omitempty"`                                            // Service that published the event
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                                         // When event occurred
	Payload       *anypb.Any             `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`                                                                             // Event-specific data
	Metadata      map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional context
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_proto_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetType() EventType {
	if x != nil {
		return x.Type
	}
	return EventType_EVENT_TYPE_UNSPECIFIED
}

func (x *Event) GetSourceService() string {
	if x != nil {
		return x.SourceService
	}
	return ""
}

func (x *Event) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Event) GetPayload() *anypb.Any {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Event) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// InventoryLevelChangedEvent is published when inventory levels change
type InventoryLevelChangedEvent struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ItemId         string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	ItemName       string                 `protobuf:"bytes,2,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`
	PreviousLevel  float64                `protobuf:"fixed64,3,opt,name=previous_level,json=previousLevel,proto3" json:"previous_level,omitempty"`
	NewLevel       float64                `protobuf:"fixed64,4,opt,name=new_level,json=newLevel,proto3" json:"new_level,omitempty"`
	Unit           string                 `protobuf:"bytes,5,opt,name=unit,proto3" json:"unit,omitempty"`
	Threshold      float64                `protobuf:"fixed64,6,opt,name=threshold,proto3" json:"threshold,omitempty"`                                // Low stock threshold
	BelowThreshold bool                   `protobuf:"varint,7,opt,name=below_threshold,json=belowThreshold,proto3" json:"below_threshold,omitempty"` // Whether new level is below threshold
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *InventoryLevelChangedEvent) Reset() {
	*x = InventoryLevelChangedEvent{}
	mi := &file_proto_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InventoryLevelChangedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryLevelChangedEvent) ProtoMessage() {}

func (x *InventoryLevelChangedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryLevelChangedEvent.ProtoReflect.Descriptor instead.
func (*InventoryLevelChangedEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{1}
}

func (x *InventoryLevelChangedEvent) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *InventoryLevelChangedEvent) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *InventoryLevelChangedEvent) GetPreviousLevel() float64 {
	if x != nil {
		return x.PreviousLevel
	}
	return 0
}

func (x *InventoryLevelChangedEvent) GetNewLevel() float64 {
	if x != nil {
		return x.NewLevel
	}
	return 0
}

func (x *InventoryLevelChangedEvent) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *InventoryLevelChangedEvent) GetThreshold() float64 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *InventoryLevelChangedEvent) GetBelowThreshold() bool {
	if x != nil {
		return x.BelowThreshold
	}
	return false
}

// TaskCompletedEvent is published when a task is marked as completed
type TaskCompletedEvent struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TaskId          string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	TaskName        string                 `protobuf:"bytes,2,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	UserId          string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	LocationPath    string                 `protobuf:"bytes,4,opt,name=location_path,json=locationPath,proto3" json:"location_path,omitempty"`          // Hierarchical task location
	CompletedPoints []string               `protobuf:"bytes,5,rep,name=completed_points,json=completedPoints,proto3" json:"completed_points,omitempty"` // Points that were completed
	CompletionTime  *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=completion_time,json=completionTime,proto3" json:"completion_time,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TaskCompletedEvent) Reset() {
	*x = TaskCompletedEvent{}
	mi := &file_proto_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskCompletedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCompletedEvent) ProtoMessage() {}

func (x *TaskCompletedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCompletedEvent.ProtoReflect.Descriptor instead.
func (*TaskCompletedEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{2}
}

func (x *TaskCompletedEvent) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskCompletedEvent) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *TaskCompletedEvent) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TaskCompletedEvent) GetLocationPath() string {
	if x != nil {
		return x.LocationPath
	}
	return ""
}

func (x *TaskCompletedEvent) GetCompletedPoints() []string {
	if x != nil {
		return x.CompletedPoints
	}
	return nil
}

func (x *TaskCompletedEvent) GetCompletionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletionTime
	}
	return nil
}

// TaskAssignedEvent is published when a task is assigned to a user
type TaskAssignedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	TaskName      string                 `protobuf:"bytes,2,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AssignedBy    string                 `protobuf:"bytes,4,opt,name=assigned_by,json=assignedBy,proto3" json:"assigned_by,omitempty"` // Who assigned the task
	AssignedAt    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=assigned_at,json=assignedAt,proto3" json:"assigned_at,omitempty"`
	GroupId       string                 `protobuf:"bytes,6,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"` // Optional group context
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskAssignedEvent) Reset() {
	*x = TaskAssignedEvent{}
	mi := &file_proto_events_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskAssignedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskAssignedEvent) ProtoMessage() {}

func (x *TaskAssignedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskAssignedEvent.ProtoReflect.Descriptor instead.
func (*TaskAssignedEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{3}
}

func (x *TaskAssignedEvent) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskAssignedEvent) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *TaskAssignedEvent) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TaskAssignedEvent) GetAssignedBy() string {
	if x != nil {
		return x.AssignedBy
	}
	return ""
}

func (x *TaskAssignedEvent) GetAssignedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AssignedAt
	}
	return nil
}

func (x *TaskAssignedEvent) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

// ScheduleTriggerEvent is published when a scheduled trigger fires
type ScheduleTriggerEvent struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TriggerId      string                 `protobuf:"bytes,1,opt,name=trigger_id,json=triggerId,proto3" json:"trigger_id,omitempty"`
	TriggerName    string                 `protobuf:"bytes,2,opt,name=trigger_name,json=triggerName,proto3" json:"trigger_name,omitempty"`
	CronExpression string                 `protobuf:"bytes,3,opt,name=cron_expression,json=cronExpression,proto3" json:"cron_expression,omitempty"`                                       // Original schedule
	Context        map[string]string      `protobuf:"bytes,4,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional trigger context
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ScheduleTriggerEvent) Reset() {
	*x = ScheduleTriggerEvent{}
	mi := &file_proto_events_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleTriggerEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleTriggerEvent) ProtoMessage() {}

func (x *ScheduleTriggerEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleTriggerEvent.ProtoReflect.Descriptor instead.
func (*ScheduleTriggerEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{4}
}

func (x *ScheduleTriggerEvent) GetTriggerId() string {
	if x != nil {
		return x.TriggerId
	}
	return ""
}

func (x *ScheduleTriggerEvent) GetTriggerName() string {
	if x != nil {
		return x.TriggerName
	}
	return ""
}

func (x *ScheduleTriggerEvent) GetCronExpression() string {
	if x != nil {
		return x.CronExpression
	}
	return ""
}

func (x *ScheduleTriggerEvent) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

var File_proto_events_proto protoreflect.FileDescriptor

const file_proto_events_proto_rawDesc = "" +
	"\n" +
	"\x12proto/events.proto\x12\x10shared.events.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x19google/protobuf/any.proto\"\xd9\x02\n" +
	"\x05Event\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12/\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1b.shared.events.v1.EventTypeR\x04type\x12%\n" +
	"\x0esource_service\x18\x03 \x01(\tR\rsourceService\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12.\n" +
	"\apayload\x18\x05 \x01(\v2\x14.google.protobuf.AnyR\apayload\x12A\n" +
	"\bmetadata\x18\x06 \x03(\v2%.shared.events.v1.Event.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf1\x01\n" +
	"\x1aInventoryLevelChangedEvent\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\x12\x1b\n" +
	"\titem_name\x18\x02 \x01(\tR\bitemName\x12%\n" +
	"\x0eprevious_level\x18\x03 \x01(\x01R\rpreviousLevel\x12\x1b\n" +
	"\tnew_level\x18\x04 \x01(\x01R\bnewLevel\x12\x12\n" +
	"\x04unit\x18\x05 \x01(\tR\x04unit\x12\x1c\n" +
	"\tthreshold\x18\x06 \x01(\x01R\tthreshold\x12'\n" +
	"\x0fbelow_threshold\x18\a \x01(\bR\x0ebelowThreshold\"\xf8\x01\n" +
	"\x12TaskCompletedEvent\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x1b\n" +
	"\ttask_name\x18\x02 \x01(\tR\btaskName\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12#\n" +
	"\rlocation_path\x18\x04 \x01(\tR\flocationPath\x12)\n" +
	"\x10completed_points\x18\x05 \x03(\tR\x0fcompletedPoints\x12C\n" +
	"\x0fcompletion_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x0ecompletionTime\"\xdb\x01\n" +
	"\x11TaskAssignedEvent\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x1b\n" +
	"\ttask_name\x18\x02 \x01(\tR\btaskName\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x1f\n" +
	"\vassigned_by\x18\x04 \x01(\tR\n" +
	"assignedBy\x12;\n" +
	"\vassigned_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"assignedAt\x12\x19\n" +
	"\bgroup_id\x18\x06 \x01(\tR\agroupId\"\x8c\x02\n" +
	"\x14ScheduleTriggerEvent\x12\x1d\n" +
	"\n" +
	"trigger_id\x18\x01 \x01(\tR\ttriggerId\x12!\n" +
	"\ftrigger_name\x18\x02 \x01(\tR\vtriggerName\x12'\n" +
	"\x0fcron_expression\x18\x03 \x01(\tR\x0ecronExpression\x12M\n" +
	"\acontext\x18\x04 \x03(\v23.shared.events.v1.ScheduleTriggerEvent.ContextEntryR\acontext\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*\xc8\x02\n" +
	"\tEventType\x12\x1a\n" +
	"\x16EVENT_TYPE_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17INVENTORY_LEVEL_CHANGED\x10d\x12\x1d\n" +
	"\x19INVENTORY_LOW_STOCK_ALERT\x10e\x12#\n" +
	"\x1fINVENTORY_CONSUMPTION_PREDICTED\x10f\x12\x11\n" +
	"\fTASK_CREATED\x10\xc8\x01\x12\x17\n" +
	"\x12TASK_STAGE_CHANGED\x10\xc9\x01\x12\x13\n" +
	"\x0eTASK_COMPLETED\x10\xca\x01\x12\x12\n" +
	"\rTASK_ASSIGNED\x10\xcb\x01\x12\x18\n" +
	"\x13GROUP_TASK_ASSIGNED\x10\xac\x02\x12\x15\n" +
	"\x10SCHEDULE_TRIGGER\x10\xad\x02\x12\x1a\n" +
	"\x15PIPELINE_WORK_STARTED\x10\xae\x02\x12\x1c\n" +
	"\x17PIPELINE_WORK_COMPLETED\x10\xaf\x02B9Z7github.com/DaDevFox/task-systems/shared/proto/events/v1b\x06proto3"

var (
	file_proto_events_proto_rawDescOnce sync.Once
	file_proto_events_proto_rawDescData []byte
)

func file_proto_events_proto_rawDescGZIP() []byte {
	file_proto_events_proto_rawDescOnce.Do(func() {
		file_proto_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_events_proto_rawDesc), len(file_proto_events_proto_rawDesc)))
	})
	return file_proto_events_proto_rawDescData
}

var file_proto_events_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_events_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_events_proto_goTypes = []any{
	(EventType)(0),                     // 0: shared.events.v1.EventType
	(*Event)(nil),                      // 1: shared.events.v1.Event
	(*InventoryLevelChangedEvent)(nil), // 2: shared.events.v1.InventoryLevelChangedEvent
	(*TaskCompletedEvent)(nil),         // 3: shared.events.v1.TaskCompletedEvent
	(*TaskAssignedEvent)(nil),          // 4: shared.events.v1.TaskAssignedEvent
	(*ScheduleTriggerEvent)(nil),       // 5: shared.events.v1.ScheduleTriggerEvent
	nil,                                // 6: shared.events.v1.Event.MetadataEntry
	nil,                                // 7: shared.events.v1.ScheduleTriggerEvent.ContextEntry
	(*timestamppb.Timestamp)(nil),      // 8: google.protobuf.Timestamp
	(*anypb.Any)(nil),                  // 9: google.protobuf.Any
}
var file_proto_events_proto_depIdxs = []int32{
	0, // 0: shared.events.v1.Event.type:type_name -> shared.events.v1.EventType
	8, // 1: shared.events.v1.Event.timestamp:type_name -> google.protobuf.Timestamp
	9, // 2: shared.events.v1.Event.payload:type_name -> google.protobuf.Any
	6, // 3: shared.events.v1.Event.metadata:type_name -> shared.events.v1.Event.MetadataEntry
	8, // 4: shared.events.v1.TaskCompletedEvent.completion_time:type_name -> google.protobuf.Timestamp
	8, // 5: shared.events.v1.TaskAssignedEvent.assigned_at:type_name -> google.protobuf.Timestamp
	7, // 6: shared.events.v1.ScheduleTriggerEvent.context:type_name -> shared.events.v1.ScheduleTriggerEvent.ContextEntry
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_proto_events_proto_init() }
func file_proto_events_proto_init() {
	if File_proto_events_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_events_proto_rawDesc), len(file_proto_events_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_events_proto_goTypes,
		DependencyIndexes: file_proto_events_proto_depIdxs,
		EnumInfos:         file_proto_events_proto_enumTypes,
		MessageInfos:      file_proto_events_proto_msgTypes,
	}.Build()
	File_proto_events_proto = out.File
	file_proto_events_proto_goTypes = nil
	file_proto_events_proto_depIdxs = nil
}
