<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:InventoryClient.ViewModels"
             xmlns:models="clr-namespace:InventoryClient.Models"
             xmlns:shared="clr-namespace:TaskSystems.Shared.Controls;assembly=TaskSystems.Shared"
             xmlns:conv="clr-namespace:InventoryClient.Converters"
             xmlns:views="clr-namespace:InventoryClient.Views"
             mc:Ignorable="d" d:DesignWidth="320" d:DesignHeight="180"
             x:Class="InventoryClient.Views.InventoryItemCard"
             x:DataType="models:InventoryItemViewModel">

  <UserControl.Resources>
    <conv:FractionToWidthConverter x:Key="FractionToWidthConverter"/>
    <conv:FractionToMarginConverter x:Key="FractionToMarginConverter"/>
  </UserControl.Resources>

  <UserControl.Styles>
    <Style Selector="Border.item-card">
      <Setter Property="Background" Value="White"/>
      <Setter Property="CornerRadius" Value="8"/>
      <Setter Property="Padding" Value="16"/>
      <Setter Property="Margin" Value="8"/>
      <Setter Property="BoxShadow" Value="0 2 8 0 #10000000"/>
      <Setter Property="BorderBrush" Value="#e5e7eb"/>
      <Setter Property="BorderThickness" Value="1"/>
    </Style>
    
    <Style Selector="Border.item-card:pointerover">
      <Setter Property="BoxShadow" Value="0 4 12 0 #20000000"/>
    </Style>
    
    <Style Selector="TextBlock.item-name">
      <Setter Property="FontSize" Value="16"/>
      <Setter Property="FontWeight" Value="Bold"/>
      <Setter Property="Margin" Value="0,0,0,4"/>
    </Style>
    
    <Style Selector="TextBlock.item-description">
      <Setter Property="FontSize" Value="12"/>
      <Setter Property="Foreground" Value="#64748b"/>
      <Setter Property="Margin" Value="0,0,0,8"/>
      <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    
    <Style Selector="Button.chart-button">
      <Setter Property="Background" Value="#3b82f6"/>
      <Setter Property="Foreground" Value="White"/>
      <Setter Property="Padding" Value="8,4"/>
      <Setter Property="CornerRadius" Value="4"/>
      <Setter Property="FontSize" Value="11"/>
    </Style>
  </UserControl.Styles>

  <Border Classes="item-card" MinWidth="300" MinHeight="160">
    <Grid RowDefinitions="Auto,Auto,*,Auto">
      
      <!-- Header with Name and Status -->
      <Grid Grid.Row="0" ColumnDefinitions="*,Auto">
        <StackPanel Grid.Column="0">
          <TextBlock Text="{Binding Name}" Classes="item-name"/>
          <TextBlock Text="{Binding Description}" 
                     Classes="item-description"
                     MaxLines="2"/>
        </StackPanel>
        
        <shared:StatusIndicator Grid.Column="1" 
                                Status="{Binding StockStatus}" 
                                Description="{Binding StockStatus}"
                                VerticalAlignment="Top"/>
      </Grid>
      
      <!-- Level Information with Mini Chart -->
      <Grid Grid.Row="1" ColumnDefinitions="*,120" Margin="0,8,0,8">
        <StackPanel Grid.Column="0">
          <Grid ColumnDefinitions="*,*">
            <StackPanel Grid.Column="0">
              <TextBlock Text="Current Level" FontSize="10" Foreground="#64748b"/>
              <TextBlock Text="{Binding CurrentLevelDisplay}" FontSize="14" FontWeight="SemiBold"/>
            </StackPanel>
            
            <StackPanel Grid.Column="1">
              <TextBlock Text="Capacity" FontSize="10" Foreground="#64748b"/>
              <TextBlock Text="{Binding CurrentLevelPercentage, StringFormat='{}{0:F1}%'}" FontSize="14" FontWeight="SemiBold"/>
            </StackPanel>
          </Grid>
        </StackPanel>
        
        <!-- Mini Chart Preview -->
        <Border Grid.Column="1" 
                Background="#f8fafc" 
                CornerRadius="4" 
                BorderBrush="#e5e7eb" 
                BorderThickness="1"
                Padding="4"
                Margin="8,0,0,0">
          <ContentPresenter x:Name="MiniChartPresenter"/>
        </Border>
      </Grid>
      
      <!-- Progress Bar -->
      <StackPanel Grid.Row="2" Spacing="4">

        <Grid>
          <Border Background="Gray" Height="10" CornerRadius="5"/>

          <!-- Blue: scale relative to CurrentFraction -->
          <Border Background="Blue" Height="10" CornerRadius="5"
                  HorizontalAlignment="Left"
                  IsVisible="{Binding CurrentFraction, Converter={x:Static conv:IsPositiveConverter.Instance}}">
            <Border.Width>
              <MultiBinding Converter="{StaticResource FractionToWidthConverter}"
                            FallbackValue="0">
                <Binding Path="CurrentFraction" FallbackValue="0"/>
                <Binding RelativeSource="{RelativeSource AncestorType=Grid}" Path="Bounds.Width" FallbackValue="100"/>
              </MultiBinding>
            </Border.Width>
          </Border>

          <!-- Red/Green delta -->
          <Border Background="{Binding DeltaBrush}" Height="10" CornerRadius="5"
                  HorizontalAlignment="Left"
                  IsVisible="{Binding DeltaFraction, Converter={x:Static conv:IsNonZeroConverter.Instance}}">
            <Border.Margin>
              <MultiBinding Converter="{StaticResource FractionToMarginConverter}"
                            FallbackValue="0,0,0,0">
                <Binding Path="CurrentFraction" FallbackValue="0"/>
                <Binding RelativeSource="{RelativeSource AncestorType=Grid}" Path="Bounds.Width" FallbackValue="100"/>
              </MultiBinding>
            </Border.Margin>
            <Border.Width>
              <MultiBinding Converter="{StaticResource FractionToWidthConverter}"
                            FallbackValue="0">
                <Binding Path="DeltaFraction" FallbackValue="0"/>
                <Binding RelativeSource="{RelativeSource AncestorType=Grid}" Path="Bounds.Width" FallbackValue="100"/>
              </MultiBinding>
            </Border.Width>
          </Border>

          <!-- Interactive slider -->
          <Slider Minimum="0" 
                  Maximum="{Binding MaxCapacity, FallbackValue=100}"
                  Value="{Binding ProposedLevel, Mode=TwoWay, FallbackValue=0}"
                  Background="Transparent"
                  Foreground="Transparent"
                  IsEnabled="{Binding MaxCapacity, Converter={x:Static conv:IsPositiveConverter.Instance}}"
                  SmallChange="0.1"
                  LargeChange="1.0"
                  TickFrequency="1.0"/>
        </Grid>

        <!-- <ProgressBar Value="{Binding CurrentLevelPercentage}"  -->
        <!--              Maximum="100"  -->
        <!--              Height="8" -->
        <!--              CornerRadius="4"/> -->

        <Grid ColumnDefinitions="*,*">
          <TextBlock Grid.Column="0" 
                     Text="{Binding MaxCapacityDisplay}" 
                     FontSize="10" 
                     Foreground="#64748b"/>
          <TextBlock Grid.Column="1" 
                     Text="{Binding PredictedDaysRemaining, StringFormat='{}{0:F1} days left'}" 
                     FontSize="10" 
                     Foreground="#7c3aed"
                     HorizontalAlignment="Right"
                     IsVisible="{Binding HasPrediction}"/>
        </Grid>
      </StackPanel>
      
      <!-- Actions -->
      <Grid Grid.Row="3" ColumnDefinitions="*,Auto,Auto,Auto,Auto" Margin="0,12,0,0">
        <TextBlock Grid.Column="0" 
                   Text="{Binding LastUpdated, StringFormat='Updated {0:MM/dd HH:mm}'}" 
                   FontSize="10" 
                   Foreground="#64748b"
                   VerticalAlignment="Center"/>

        <NumericUpDown Grid.Column="1" 
                     Value="{Binding ProposedLevel, Mode=TwoWay, FallbackValue=0}" 
                     Minimum="0" 
                     Maximum="{Binding MaxCapacity, FallbackValue=999999}"
                     Width="80" 
                     Margin="0,0,4,0"
                     FormatString="0.00"
                     ShowButtonSpinner="False"
                     IsEnabled="{Binding MaxCapacity, Converter={x:Static conv:IsPositiveConverter.Instance}}"
                     ToolTip.Tip="New Quantity"/>

        <views:UnderlineButton Grid.Column="2" 
                               Text="Update"
                               Click="UpdateButton_Click"
                               TextColor="#374151"
                               HoverTextColor="#2563eb"
                               UnderlineColor="#3b82f6"
                               ButtonFontSize="11"
                               Margin="0,0,4,0"/>

        <views:UnderlineButton Grid.Column="3" 
                               Text="History"
                               Icon="📊"
                               Click="ChartButton_Click"
                               TextColor="#374151"
                               HoverTextColor="#059669"
                               UnderlineColor="#10b981"
                               ButtonFontSize="11"
                               Margin="0,0,4,0"/>

        <views:UnderlineButton Grid.Column="4" 
                               Text=""
                               Icon="🗑️"
                               Click="RemoveButton_Click"
                               TextColor="#374151"
                               HoverTextColor="#dc2626"
                               UnderlineColor="#ef4444"
                               ButtonFontSize="11"
                               ButtonMinWidth="30"
                               ToolTip.Tip="Remove Item"/>
      </Grid>
      
    </Grid>
  </Border>
  
</UserControl>
