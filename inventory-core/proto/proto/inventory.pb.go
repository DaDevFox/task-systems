// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/inventory.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// UnitType defines the type of measurement unit
type UnitType int32

const (
	UnitType_UNIT_TYPE_UNSPECIFIED UnitType = 0
	UnitType_UNIT_TYPE_WEIGHT      UnitType = 1 // kg, lbs, grams, etc.
	UnitType_UNIT_TYPE_VOLUME      UnitType = 2 // liters, cups, gallons, etc.
	UnitType_UNIT_TYPE_COUNT       UnitType = 3 // items, pieces, etc.
	UnitType_UNIT_TYPE_LENGTH      UnitType = 4 // meters, feet, inches, etc.
	UnitType_UNIT_TYPE_AREA        UnitType = 5 // square meters, acres, etc.
)

// Enum value maps for UnitType.
var (
	UnitType_name = map[int32]string{
		0: "UNIT_TYPE_UNSPECIFIED",
		1: "UNIT_TYPE_WEIGHT",
		2: "UNIT_TYPE_VOLUME",
		3: "UNIT_TYPE_COUNT",
		4: "UNIT_TYPE_LENGTH",
		5: "UNIT_TYPE_AREA",
	}
	UnitType_value = map[string]int32{
		"UNIT_TYPE_UNSPECIFIED": 0,
		"UNIT_TYPE_WEIGHT":      1,
		"UNIT_TYPE_VOLUME":      2,
		"UNIT_TYPE_COUNT":       3,
		"UNIT_TYPE_LENGTH":      4,
		"UNIT_TYPE_AREA":        5,
	}
)

func (x UnitType) Enum() *UnitType {
	p := new(UnitType)
	*p = x
	return p
}

func (x UnitType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnitType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_inventory_proto_enumTypes[0].Descriptor()
}

func (UnitType) Type() protoreflect.EnumType {
	return &file_proto_inventory_proto_enumTypes[0]
}

func (x UnitType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UnitType.Descriptor instead.
func (UnitType) EnumDescriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{0}
}

// ConsumptionPattern defines how an item is typically consumed
type ConsumptionPattern int32

const (
	ConsumptionPattern_CONSUMPTION_PATTERN_UNSPECIFIED ConsumptionPattern = 0
	ConsumptionPattern_CONSUMPTION_PATTERN_LINEAR      ConsumptionPattern = 1 // Steady, consistent usage
	ConsumptionPattern_CONSUMPTION_PATTERN_SEASONAL    ConsumptionPattern = 2 // Varies by season/time of year
	ConsumptionPattern_CONSUMPTION_PATTERN_BATCH       ConsumptionPattern = 3 // Used in large amounts at once
	ConsumptionPattern_CONSUMPTION_PATTERN_RANDOM      ConsumptionPattern = 4 // Unpredictable usage
)

// Enum value maps for ConsumptionPattern.
var (
	ConsumptionPattern_name = map[int32]string{
		0: "CONSUMPTION_PATTERN_UNSPECIFIED",
		1: "CONSUMPTION_PATTERN_LINEAR",
		2: "CONSUMPTION_PATTERN_SEASONAL",
		3: "CONSUMPTION_PATTERN_BATCH",
		4: "CONSUMPTION_PATTERN_RANDOM",
	}
	ConsumptionPattern_value = map[string]int32{
		"CONSUMPTION_PATTERN_UNSPECIFIED": 0,
		"CONSUMPTION_PATTERN_LINEAR":      1,
		"CONSUMPTION_PATTERN_SEASONAL":    2,
		"CONSUMPTION_PATTERN_BATCH":       3,
		"CONSUMPTION_PATTERN_RANDOM":      4,
	}
)

func (x ConsumptionPattern) Enum() *ConsumptionPattern {
	p := new(ConsumptionPattern)
	*p = x
	return p
}

func (x ConsumptionPattern) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConsumptionPattern) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_inventory_proto_enumTypes[1].Descriptor()
}

func (ConsumptionPattern) Type() protoreflect.EnumType {
	return &file_proto_inventory_proto_enumTypes[1]
}

func (x ConsumptionPattern) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConsumptionPattern.Descriptor instead.
func (ConsumptionPattern) EnumDescriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{1}
}

// TrainingStage defines the current training phase for prediction models
type TrainingStage int32

const (
	TrainingStage_TRAINING_STAGE_UNSPECIFIED TrainingStage = 0
	TrainingStage_TRAINING_STAGE_COLLECTING  TrainingStage = 1 // Actively collecting training data
	TrainingStage_TRAINING_STAGE_LEARNING    TrainingStage = 2 // Processing collected data
	TrainingStage_TRAINING_STAGE_TRAINED     TrainingStage = 3 // Model is trained and active
	TrainingStage_TRAINING_STAGE_RETRAINING  TrainingStage = 4 // Model being retrained with new data
)

// Enum value maps for TrainingStage.
var (
	TrainingStage_name = map[int32]string{
		0: "TRAINING_STAGE_UNSPECIFIED",
		1: "TRAINING_STAGE_COLLECTING",
		2: "TRAINING_STAGE_LEARNING",
		3: "TRAINING_STAGE_TRAINED",
		4: "TRAINING_STAGE_RETRAINING",
	}
	TrainingStage_value = map[string]int32{
		"TRAINING_STAGE_UNSPECIFIED": 0,
		"TRAINING_STAGE_COLLECTING":  1,
		"TRAINING_STAGE_LEARNING":    2,
		"TRAINING_STAGE_TRAINED":     3,
		"TRAINING_STAGE_RETRAINING":  4,
	}
)

func (x TrainingStage) Enum() *TrainingStage {
	p := new(TrainingStage)
	*p = x
	return p
}

func (x TrainingStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TrainingStage) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_inventory_proto_enumTypes[2].Descriptor()
}

func (TrainingStage) Type() protoreflect.EnumType {
	return &file_proto_inventory_proto_enumTypes[2]
}

func (x TrainingStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TrainingStage.Descriptor instead.
func (TrainingStage) EnumDescriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{2}
}

// PredictionModel defines available prediction algorithms
type PredictionModel int32

const (
	PredictionModel_PREDICTION_MODEL_UNSPECIFIED   PredictionModel = 0
	PredictionModel_PREDICTION_MODEL_MARKOV        PredictionModel = 1 // Finite state consumption model
	PredictionModel_PREDICTION_MODEL_CROSTON       PredictionModel = 2 // Intermittent demand forecasting
	PredictionModel_PREDICTION_MODEL_DRIFT_IMPULSE PredictionModel = 3 // Physical system with drift and impulses
	PredictionModel_PREDICTION_MODEL_BAYESIAN      PredictionModel = 4 // Bayesian inference with confidence intervals
	PredictionModel_PREDICTION_MODEL_MEMORY_WINDOW PredictionModel = 5 // Memory-augmented rolling windows
	PredictionModel_PREDICTION_MODEL_EVENT_TRIGGER PredictionModel = 6 // Temporal event trigger modeling
)

// Enum value maps for PredictionModel.
var (
	PredictionModel_name = map[int32]string{
		0: "PREDICTION_MODEL_UNSPECIFIED",
		1: "PREDICTION_MODEL_MARKOV",
		2: "PREDICTION_MODEL_CROSTON",
		3: "PREDICTION_MODEL_DRIFT_IMPULSE",
		4: "PREDICTION_MODEL_BAYESIAN",
		5: "PREDICTION_MODEL_MEMORY_WINDOW",
		6: "PREDICTION_MODEL_EVENT_TRIGGER",
	}
	PredictionModel_value = map[string]int32{
		"PREDICTION_MODEL_UNSPECIFIED":   0,
		"PREDICTION_MODEL_MARKOV":        1,
		"PREDICTION_MODEL_CROSTON":       2,
		"PREDICTION_MODEL_DRIFT_IMPULSE": 3,
		"PREDICTION_MODEL_BAYESIAN":      4,
		"PREDICTION_MODEL_MEMORY_WINDOW": 5,
		"PREDICTION_MODEL_EVENT_TRIGGER": 6,
	}
)

func (x PredictionModel) Enum() *PredictionModel {
	p := new(PredictionModel)
	*p = x
	return p
}

func (x PredictionModel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PredictionModel) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_inventory_proto_enumTypes[3].Descriptor()
}

func (PredictionModel) Type() protoreflect.EnumType {
	return &file_proto_inventory_proto_enumTypes[3]
}

func (x PredictionModel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PredictionModel.Descriptor instead.
func (PredictionModel) EnumDescriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{3}
}

// Unit represents a measurement unit with conversion capabilities
type Unit struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                     // Unique unit identifier (e.g., "kg", "lbs")
	Name                 string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                 // Human-readable name (e.g., "Kilograms")
	Symbol               string                 `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`                                                             // Display symbol (e.g., "kg")
	Type                 UnitType               `protobuf:"varint,4,opt,name=type,proto3,enum=inventory.v1.UnitType" json:"type,omitempty"`                                     // Type of measurement
	BaseConversionFactor float64                `protobuf:"fixed64,5,opt,name=base_conversion_factor,json=baseConversionFactor,proto3" json:"base_conversion_factor,omitempty"` // Factor to convert to base unit of this type
	BaseUnitId           string                 `protobuf:"bytes,6,opt,name=base_unit_id,json=baseUnitId,proto3" json:"base_unit_id,omitempty"`                                 // ID of the base unit for this type
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Unit) Reset() {
	*x = Unit{}
	mi := &file_proto_inventory_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Unit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unit) ProtoMessage() {}

func (x *Unit) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unit.ProtoReflect.Descriptor instead.
func (*Unit) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{0}
}

func (x *Unit) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Unit) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Unit) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Unit) GetType() UnitType {
	if x != nil {
		return x.Type
	}
	return UnitType_UNIT_TYPE_UNSPECIFIED
}

func (x *Unit) GetBaseConversionFactor() float64 {
	if x != nil {
		return x.BaseConversionFactor
	}
	return 0
}

func (x *Unit) GetBaseUnitId() string {
	if x != nil {
		return x.BaseUnitId
	}
	return ""
}

// ConsumptionBehavior defines how an item is consumed over time
type ConsumptionBehavior struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Pattern           ConsumptionPattern     `protobuf:"varint,1,opt,name=pattern,proto3,enum=inventory.v1.ConsumptionPattern" json:"pattern,omitempty"`              // Type of consumption pattern
	AverageRatePerDay float64                `protobuf:"fixed64,2,opt,name=average_rate_per_day,json=averageRatePerDay,proto3" json:"average_rate_per_day,omitempty"` // Average consumption per day
	Variance          float64                `protobuf:"fixed64,3,opt,name=variance,proto3" json:"variance,omitempty"`                                                // Variance in consumption (for uncertainty)
	SeasonalFactors   []float64              `protobuf:"fixed64,4,rep,packed,name=seasonal_factors,json=seasonalFactors,proto3" json:"seasonal_factors,omitempty"`    // Monthly multipliers (12 values, Jan-Dec)
	LastUpdated       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ConsumptionBehavior) Reset() {
	*x = ConsumptionBehavior{}
	mi := &file_proto_inventory_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumptionBehavior) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumptionBehavior) ProtoMessage() {}

func (x *ConsumptionBehavior) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumptionBehavior.ProtoReflect.Descriptor instead.
func (*ConsumptionBehavior) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{1}
}

func (x *ConsumptionBehavior) GetPattern() ConsumptionPattern {
	if x != nil {
		return x.Pattern
	}
	return ConsumptionPattern_CONSUMPTION_PATTERN_UNSPECIFIED
}

func (x *ConsumptionBehavior) GetAverageRatePerDay() float64 {
	if x != nil {
		return x.AverageRatePerDay
	}
	return 0
}

func (x *ConsumptionBehavior) GetVariance() float64 {
	if x != nil {
		return x.Variance
	}
	return 0
}

func (x *ConsumptionBehavior) GetSeasonalFactors() []float64 {
	if x != nil {
		return x.SeasonalFactors
	}
	return nil
}

func (x *ConsumptionBehavior) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

// ConsumptionRecord tracks historical usage of an item
type ConsumptionRecord struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Timestamp      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	AmountConsumed float64                `protobuf:"fixed64,2,opt,name=amount_consumed,json=amountConsumed,proto3" json:"amount_consumed,omitempty"`
	UnitId         string                 `protobuf:"bytes,3,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`
	Reason         string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"` // Optional: why item was consumed
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ConsumptionRecord) Reset() {
	*x = ConsumptionRecord{}
	mi := &file_proto_inventory_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumptionRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumptionRecord) ProtoMessage() {}

func (x *ConsumptionRecord) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumptionRecord.ProtoReflect.Descriptor instead.
func (*ConsumptionRecord) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{2}
}

func (x *ConsumptionRecord) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ConsumptionRecord) GetAmountConsumed() float64 {
	if x != nil {
		return x.AmountConsumed
	}
	return 0
}

func (x *ConsumptionRecord) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *ConsumptionRecord) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// InventoryItem represents a single item in inventory
type InventoryItem struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                            // Unique identifier
	Name                string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                        // Human-readable name
	Description         string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                          // Optional description
	CurrentLevel        float64                `protobuf:"fixed64,4,opt,name=current_level,json=currentLevel,proto3" json:"current_level,omitempty"`                  // Current quantity available
	MaxCapacity         float64                `protobuf:"fixed64,5,opt,name=max_capacity,json=maxCapacity,proto3" json:"max_capacity,omitempty"`                     // Maximum storage capacity
	LowStockThreshold   float64                `protobuf:"fixed64,6,opt,name=low_stock_threshold,json=lowStockThreshold,proto3" json:"low_stock_threshold,omitempty"` // Alert when below this level
	UnitId              string                 `protobuf:"bytes,7,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`                                      // Primary unit for this item
	AlternateUnitIds    []string               `protobuf:"bytes,8,rep,name=alternate_unit_ids,json=alternateUnitIds,proto3" json:"alternate_unit_ids,omitempty"`      // Other valid units for this item
	ConsumptionBehavior *ConsumptionBehavior   `protobuf:"bytes,9,opt,name=consumption_behavior,json=consumptionBehavior,proto3" json:"consumption_behavior,omitempty"`
	ConsumptionHistory  []*ConsumptionRecord   `protobuf:"bytes,10,rep,name=consumption_history,json=consumptionHistory,proto3" json:"consumption_history,omitempty"`
	CreatedAt           *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt           *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Metadata            map[string]string      `protobuf:"bytes,13,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Custom key-value pairs
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *InventoryItem) Reset() {
	*x = InventoryItem{}
	mi := &file_proto_inventory_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InventoryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryItem) ProtoMessage() {}

func (x *InventoryItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryItem.ProtoReflect.Descriptor instead.
func (*InventoryItem) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{3}
}

func (x *InventoryItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InventoryItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InventoryItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InventoryItem) GetCurrentLevel() float64 {
	if x != nil {
		return x.CurrentLevel
	}
	return 0
}

func (x *InventoryItem) GetMaxCapacity() float64 {
	if x != nil {
		return x.MaxCapacity
	}
	return 0
}

func (x *InventoryItem) GetLowStockThreshold() float64 {
	if x != nil {
		return x.LowStockThreshold
	}
	return 0
}

func (x *InventoryItem) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *InventoryItem) GetAlternateUnitIds() []string {
	if x != nil {
		return x.AlternateUnitIds
	}
	return nil
}

func (x *InventoryItem) GetConsumptionBehavior() *ConsumptionBehavior {
	if x != nil {
		return x.ConsumptionBehavior
	}
	return nil
}

func (x *InventoryItem) GetConsumptionHistory() []*ConsumptionRecord {
	if x != nil {
		return x.ConsumptionHistory
	}
	return nil
}

func (x *InventoryItem) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *InventoryItem) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *InventoryItem) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// InventoryStatus provides overview of inventory state
type InventoryStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*InventoryItem       `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	LowStockItems []*InventoryItem       `protobuf:"bytes,2,rep,name=low_stock_items,json=lowStockItems,proto3" json:"low_stock_items,omitempty"`
	EmptyItems    []*InventoryItem       `protobuf:"bytes,3,rep,name=empty_items,json=emptyItems,proto3" json:"empty_items,omitempty"`
	TotalItems    int32                  `protobuf:"varint,4,opt,name=total_items,json=totalItems,proto3" json:"total_items,omitempty"`
	LastUpdated   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InventoryStatus) Reset() {
	*x = InventoryStatus{}
	mi := &file_proto_inventory_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InventoryStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryStatus) ProtoMessage() {}

func (x *InventoryStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryStatus.ProtoReflect.Descriptor instead.
func (*InventoryStatus) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{4}
}

func (x *InventoryStatus) GetItems() []*InventoryItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *InventoryStatus) GetLowStockItems() []*InventoryItem {
	if x != nil {
		return x.LowStockItems
	}
	return nil
}

func (x *InventoryStatus) GetEmptyItems() []*InventoryItem {
	if x != nil {
		return x.EmptyItems
	}
	return nil
}

func (x *InventoryStatus) GetTotalItems() int32 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

func (x *InventoryStatus) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

// ConsumptionPrediction provides forecasted usage for an item
type ConsumptionPrediction struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	ItemId                  string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	PredictedDaysRemaining  float64                `protobuf:"fixed64,2,opt,name=predicted_days_remaining,json=predictedDaysRemaining,proto3" json:"predicted_days_remaining,omitempty"` // How many days until empty
	ConfidenceScore         float64                `protobuf:"fixed64,3,opt,name=confidence_score,json=confidenceScore,proto3" json:"confidence_score,omitempty"`                        // 0.0 to 1.0, how confident we are
	PredictedEmptyDate      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=predicted_empty_date,json=predictedEmptyDate,proto3" json:"predicted_empty_date,omitempty"`
	RecommendedRestockLevel float64                `protobuf:"fixed64,5,opt,name=recommended_restock_level,json=recommendedRestockLevel,proto3" json:"recommended_restock_level,omitempty"` // Suggested amount to restock
	PredictionModel         string                 `protobuf:"bytes,6,opt,name=prediction_model,json=predictionModel,proto3" json:"prediction_model,omitempty"`                             // Which algorithm was used
	Estimate                float64                `protobuf:"fixed64,7,opt,name=estimate,proto3" json:"estimate,omitempty"`                                                                // Predicted level at target time
	LowerBound              float64                `protobuf:"fixed64,8,opt,name=lower_bound,json=lowerBound,proto3" json:"lower_bound,omitempty"`                                          // Lower confidence bound
	UpperBound              float64                `protobuf:"fixed64,9,opt,name=upper_bound,json=upperBound,proto3" json:"upper_bound,omitempty"`                                          // Upper confidence bound
	Recommendation          string                 `protobuf:"bytes,10,opt,name=recommendation,proto3" json:"recommendation,omitempty"`                                                     // Human-readable recommendation
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ConsumptionPrediction) Reset() {
	*x = ConsumptionPrediction{}
	mi := &file_proto_inventory_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumptionPrediction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumptionPrediction) ProtoMessage() {}

func (x *ConsumptionPrediction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumptionPrediction.ProtoReflect.Descriptor instead.
func (*ConsumptionPrediction) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{5}
}

func (x *ConsumptionPrediction) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *ConsumptionPrediction) GetPredictedDaysRemaining() float64 {
	if x != nil {
		return x.PredictedDaysRemaining
	}
	return 0
}

func (x *ConsumptionPrediction) GetConfidenceScore() float64 {
	if x != nil {
		return x.ConfidenceScore
	}
	return 0
}

func (x *ConsumptionPrediction) GetPredictedEmptyDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PredictedEmptyDate
	}
	return nil
}

func (x *ConsumptionPrediction) GetRecommendedRestockLevel() float64 {
	if x != nil {
		return x.RecommendedRestockLevel
	}
	return 0
}

func (x *ConsumptionPrediction) GetPredictionModel() string {
	if x != nil {
		return x.PredictionModel
	}
	return ""
}

func (x *ConsumptionPrediction) GetEstimate() float64 {
	if x != nil {
		return x.Estimate
	}
	return 0
}

func (x *ConsumptionPrediction) GetLowerBound() float64 {
	if x != nil {
		return x.LowerBound
	}
	return 0
}

func (x *ConsumptionPrediction) GetUpperBound() float64 {
	if x != nil {
		return x.UpperBound
	}
	return 0
}

func (x *ConsumptionPrediction) GetRecommendation() string {
	if x != nil {
		return x.Recommendation
	}
	return ""
}

// PredictionTrainingStatus tracks training progress for prediction models
type PredictionTrainingStatus struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ItemId             string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Stage              TrainingStage          `protobuf:"varint,2,opt,name=stage,proto3,enum=inventory.v1.TrainingStage" json:"stage,omitempty"`
	ActiveModel        PredictionModel        `protobuf:"varint,3,opt,name=active_model,json=activeModel,proto3,enum=inventory.v1.PredictionModel" json:"active_model,omitempty"`
	AvailableModels    []PredictionModel      `protobuf:"varint,4,rep,packed,name=available_models,json=availableModels,proto3,enum=inventory.v1.PredictionModel" json:"available_models,omitempty"`
	TrainingSamples    int32                  `protobuf:"varint,5,opt,name=training_samples,json=trainingSamples,proto3" json:"training_samples,omitempty"`            // Number of data points collected
	MinSamplesRequired int32                  `protobuf:"varint,6,opt,name=min_samples_required,json=minSamplesRequired,proto3" json:"min_samples_required,omitempty"` // Minimum samples needed for training
	TrainingAccuracy   float64                `protobuf:"fixed64,7,opt,name=training_accuracy,json=trainingAccuracy,proto3" json:"training_accuracy,omitempty"`        // Model accuracy (0.0 to 1.0)
	TrainingStarted    *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=training_started,json=trainingStarted,proto3" json:"training_started,omitempty"`
	LastUpdated        *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	ModelParameters    map[string]float64     `protobuf:"bytes,10,rep,name=model_parameters,json=modelParameters,proto3" json:"model_parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"` // Model-specific parameters
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *PredictionTrainingStatus) Reset() {
	*x = PredictionTrainingStatus{}
	mi := &file_proto_inventory_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PredictionTrainingStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictionTrainingStatus) ProtoMessage() {}

func (x *PredictionTrainingStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictionTrainingStatus.ProtoReflect.Descriptor instead.
func (*PredictionTrainingStatus) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{6}
}

func (x *PredictionTrainingStatus) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *PredictionTrainingStatus) GetStage() TrainingStage {
	if x != nil {
		return x.Stage
	}
	return TrainingStage_TRAINING_STAGE_UNSPECIFIED
}

func (x *PredictionTrainingStatus) GetActiveModel() PredictionModel {
	if x != nil {
		return x.ActiveModel
	}
	return PredictionModel_PREDICTION_MODEL_UNSPECIFIED
}

func (x *PredictionTrainingStatus) GetAvailableModels() []PredictionModel {
	if x != nil {
		return x.AvailableModels
	}
	return nil
}

func (x *PredictionTrainingStatus) GetTrainingSamples() int32 {
	if x != nil {
		return x.TrainingSamples
	}
	return 0
}

func (x *PredictionTrainingStatus) GetMinSamplesRequired() int32 {
	if x != nil {
		return x.MinSamplesRequired
	}
	return 0
}

func (x *PredictionTrainingStatus) GetTrainingAccuracy() float64 {
	if x != nil {
		return x.TrainingAccuracy
	}
	return 0
}

func (x *PredictionTrainingStatus) GetTrainingStarted() *timestamppb.Timestamp {
	if x != nil {
		return x.TrainingStarted
	}
	return nil
}

func (x *PredictionTrainingStatus) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *PredictionTrainingStatus) GetModelParameters() map[string]float64 {
	if x != nil {
		return x.ModelParameters
	}
	return nil
}

// InventoryReport represents a user report during training or operation
type InventoryReport struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ItemId         string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Timestamp      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Level          float64                `protobuf:"fixed64,3,opt,name=level,proto3" json:"level,omitempty"`
	UnitId         string                 `protobuf:"bytes,4,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`
	Context        string                 `protobuf:"bytes,5,opt,name=context,proto3" json:"context,omitempty"`                                                                             // Optional context (e.g., "after dinner", "weekend")
	IsTrainingData bool                   `protobuf:"varint,6,opt,name=is_training_data,json=isTrainingData,proto3" json:"is_training_data,omitempty"`                                      // Whether this is for model training
	Metadata       map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional contextual information
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *InventoryReport) Reset() {
	*x = InventoryReport{}
	mi := &file_proto_inventory_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InventoryReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryReport) ProtoMessage() {}

func (x *InventoryReport) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryReport.ProtoReflect.Descriptor instead.
func (*InventoryReport) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{7}
}

func (x *InventoryReport) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *InventoryReport) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *InventoryReport) GetLevel() float64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *InventoryReport) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *InventoryReport) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

func (x *InventoryReport) GetIsTrainingData() bool {
	if x != nil {
		return x.IsTrainingData
	}
	return false
}

func (x *InventoryReport) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// AddInventoryItemRequest creates a new inventory item
type AddInventoryItemRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Name              string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                                   // Required: item name
	Description       string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`                                                                     // Optional: item description
	InitialLevel      float64                `protobuf:"fixed64,3,opt,name=initial_level,json=initialLevel,proto3" json:"initial_level,omitempty"`                                             // Starting quantity
	MaxCapacity       float64                `protobuf:"fixed64,4,opt,name=max_capacity,json=maxCapacity,proto3" json:"max_capacity,omitempty"`                                                // Maximum storage capacity
	LowStockThreshold float64                `protobuf:"fixed64,5,opt,name=low_stock_threshold,json=lowStockThreshold,proto3" json:"low_stock_threshold,omitempty"`                            // Alert threshold
	UnitId            string                 `protobuf:"bytes,6,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`                                                                 // Primary unit
	Metadata          map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Custom properties
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AddInventoryItemRequest) Reset() {
	*x = AddInventoryItemRequest{}
	mi := &file_proto_inventory_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddInventoryItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInventoryItemRequest) ProtoMessage() {}

func (x *AddInventoryItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInventoryItemRequest.ProtoReflect.Descriptor instead.
func (*AddInventoryItemRequest) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{8}
}

func (x *AddInventoryItemRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddInventoryItemRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddInventoryItemRequest) GetInitialLevel() float64 {
	if x != nil {
		return x.InitialLevel
	}
	return 0
}

func (x *AddInventoryItemRequest) GetMaxCapacity() float64 {
	if x != nil {
		return x.MaxCapacity
	}
	return 0
}

func (x *AddInventoryItemRequest) GetLowStockThreshold() float64 {
	if x != nil {
		return x.LowStockThreshold
	}
	return 0
}

func (x *AddInventoryItemRequest) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *AddInventoryItemRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type AddInventoryItemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *InventoryItem         `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddInventoryItemResponse) Reset() {
	*x = AddInventoryItemResponse{}
	mi := &file_proto_inventory_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddInventoryItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInventoryItemResponse) ProtoMessage() {}

func (x *AddInventoryItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInventoryItemResponse.ProtoReflect.Descriptor instead.
func (*AddInventoryItemResponse) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{9}
}

func (x *AddInventoryItemResponse) GetItem() *InventoryItem {
	if x != nil {
		return x.Item
	}
	return nil
}

// UpdateInventoryLevelRequest changes the quantity of an item
type UpdateInventoryLevelRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ItemId            string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`                                   // Required: item to update
	NewLevel          float64                `protobuf:"fixed64,2,opt,name=new_level,json=newLevel,proto3" json:"new_level,omitempty"`                           // New quantity level
	Reason            string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`                                                 // Optional: reason for change
	RecordConsumption bool                   `protobuf:"varint,4,opt,name=record_consumption,json=recordConsumption,proto3" json:"record_consumption,omitempty"` // Whether to record as consumption
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UpdateInventoryLevelRequest) Reset() {
	*x = UpdateInventoryLevelRequest{}
	mi := &file_proto_inventory_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateInventoryLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInventoryLevelRequest) ProtoMessage() {}

func (x *UpdateInventoryLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInventoryLevelRequest.ProtoReflect.Descriptor instead.
func (*UpdateInventoryLevelRequest) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateInventoryLevelRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *UpdateInventoryLevelRequest) GetNewLevel() float64 {
	if x != nil {
		return x.NewLevel
	}
	return 0
}

func (x *UpdateInventoryLevelRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *UpdateInventoryLevelRequest) GetRecordConsumption() bool {
	if x != nil {
		return x.RecordConsumption
	}
	return false
}

type UpdateInventoryLevelResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Item           *InventoryItem         `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	LevelChanged   bool                   `protobuf:"varint,2,opt,name=level_changed,json=levelChanged,proto3" json:"level_changed,omitempty"`
	BelowThreshold bool                   `protobuf:"varint,3,opt,name=below_threshold,json=belowThreshold,proto3" json:"below_threshold,omitempty"` // Whether item is now below threshold
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateInventoryLevelResponse) Reset() {
	*x = UpdateInventoryLevelResponse{}
	mi := &file_proto_inventory_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateInventoryLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInventoryLevelResponse) ProtoMessage() {}

func (x *UpdateInventoryLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInventoryLevelResponse.ProtoReflect.Descriptor instead.
func (*UpdateInventoryLevelResponse) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateInventoryLevelResponse) GetItem() *InventoryItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *UpdateInventoryLevelResponse) GetLevelChanged() bool {
	if x != nil {
		return x.LevelChanged
	}
	return false
}

func (x *UpdateInventoryLevelResponse) GetBelowThreshold() bool {
	if x != nil {
		return x.BelowThreshold
	}
	return false
}

// GetInventoryStatusRequest retrieves overall inventory state
type GetInventoryStatusRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	IncludeLowStockOnly bool                   `protobuf:"varint,1,opt,name=include_low_stock_only,json=includeLowStockOnly,proto3" json:"include_low_stock_only,omitempty"` // Filter to only low stock items
	ItemIds             []string               `protobuf:"bytes,2,rep,name=item_ids,json=itemIds,proto3" json:"item_ids,omitempty"`                                          // Optional: filter to specific items
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetInventoryStatusRequest) Reset() {
	*x = GetInventoryStatusRequest{}
	mi := &file_proto_inventory_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInventoryStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryStatusRequest) ProtoMessage() {}

func (x *GetInventoryStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryStatusRequest.ProtoReflect.Descriptor instead.
func (*GetInventoryStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{12}
}

func (x *GetInventoryStatusRequest) GetIncludeLowStockOnly() bool {
	if x != nil {
		return x.IncludeLowStockOnly
	}
	return false
}

func (x *GetInventoryStatusRequest) GetItemIds() []string {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

type GetInventoryStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *InventoryStatus       `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInventoryStatusResponse) Reset() {
	*x = GetInventoryStatusResponse{}
	mi := &file_proto_inventory_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInventoryStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryStatusResponse) ProtoMessage() {}

func (x *GetInventoryStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryStatusResponse.ProtoReflect.Descriptor instead.
func (*GetInventoryStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{13}
}

func (x *GetInventoryStatusResponse) GetStatus() *InventoryStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// PredictConsumptionRequest generates usage forecasts
type PredictConsumptionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ItemId         string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`                          // Required: item to predict
	DaysAhead      int32                  `protobuf:"varint,2,opt,name=days_ahead,json=daysAhead,proto3" json:"days_ahead,omitempty"`                // How many days to forecast (default: 30)
	UpdateBehavior bool                   `protobuf:"varint,3,opt,name=update_behavior,json=updateBehavior,proto3" json:"update_behavior,omitempty"` // Whether to update consumption behavior
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PredictConsumptionRequest) Reset() {
	*x = PredictConsumptionRequest{}
	mi := &file_proto_inventory_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PredictConsumptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictConsumptionRequest) ProtoMessage() {}

func (x *PredictConsumptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictConsumptionRequest.ProtoReflect.Descriptor instead.
func (*PredictConsumptionRequest) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{14}
}

func (x *PredictConsumptionRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *PredictConsumptionRequest) GetDaysAhead() int32 {
	if x != nil {
		return x.DaysAhead
	}
	return 0
}

func (x *PredictConsumptionRequest) GetUpdateBehavior() bool {
	if x != nil {
		return x.UpdateBehavior
	}
	return false
}

type PredictConsumptionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Prediction    *ConsumptionPrediction `protobuf:"bytes,1,opt,name=prediction,proto3" json:"prediction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PredictConsumptionResponse) Reset() {
	*x = PredictConsumptionResponse{}
	mi := &file_proto_inventory_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PredictConsumptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictConsumptionResponse) ProtoMessage() {}

func (x *PredictConsumptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictConsumptionResponse.ProtoReflect.Descriptor instead.
func (*PredictConsumptionResponse) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{15}
}

func (x *PredictConsumptionResponse) GetPrediction() *ConsumptionPrediction {
	if x != nil {
		return x.Prediction
	}
	return nil
}

// SetConsumptionBehaviorRequest configures how an item is consumed
type SetConsumptionBehaviorRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemId        string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"` // Required: item to configure
	Behavior      *ConsumptionBehavior   `protobuf:"bytes,2,opt,name=behavior,proto3" json:"behavior,omitempty"`           // Consumption behavior settings
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetConsumptionBehaviorRequest) Reset() {
	*x = SetConsumptionBehaviorRequest{}
	mi := &file_proto_inventory_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetConsumptionBehaviorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConsumptionBehaviorRequest) ProtoMessage() {}

func (x *SetConsumptionBehaviorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConsumptionBehaviorRequest.ProtoReflect.Descriptor instead.
func (*SetConsumptionBehaviorRequest) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{16}
}

func (x *SetConsumptionBehaviorRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *SetConsumptionBehaviorRequest) GetBehavior() *ConsumptionBehavior {
	if x != nil {
		return x.Behavior
	}
	return nil
}

type SetConsumptionBehaviorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *InventoryItem         `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetConsumptionBehaviorResponse) Reset() {
	*x = SetConsumptionBehaviorResponse{}
	mi := &file_proto_inventory_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetConsumptionBehaviorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConsumptionBehaviorResponse) ProtoMessage() {}

func (x *SetConsumptionBehaviorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConsumptionBehaviorResponse.ProtoReflect.Descriptor instead.
func (*SetConsumptionBehaviorResponse) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{17}
}

func (x *SetConsumptionBehaviorResponse) GetItem() *InventoryItem {
	if x != nil {
		return x.Item
	}
	return nil
}

// GetInventoryItemRequest retrieves a single item
type GetInventoryItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemId        string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"` // Required: item identifier
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInventoryItemRequest) Reset() {
	*x = GetInventoryItemRequest{}
	mi := &file_proto_inventory_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInventoryItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryItemRequest) ProtoMessage() {}

func (x *GetInventoryItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryItemRequest.ProtoReflect.Descriptor instead.
func (*GetInventoryItemRequest) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{18}
}

func (x *GetInventoryItemRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

type GetInventoryItemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *InventoryItem         `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInventoryItemResponse) Reset() {
	*x = GetInventoryItemResponse{}
	mi := &file_proto_inventory_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInventoryItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryItemResponse) ProtoMessage() {}

func (x *GetInventoryItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryItemResponse.ProtoReflect.Descriptor instead.
func (*GetInventoryItemResponse) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{19}
}

func (x *GetInventoryItemResponse) GetItem() *InventoryItem {
	if x != nil {
		return x.Item
	}
	return nil
}

// ListInventoryItemsRequest retrieves filtered list of items
type ListInventoryItemsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	LowStockOnly   bool                   `protobuf:"varint,1,opt,name=low_stock_only,json=lowStockOnly,proto3" json:"low_stock_only,omitempty"`      // Filter to low stock items
	UnitTypeFilter string                 `protobuf:"bytes,2,opt,name=unit_type_filter,json=unitTypeFilter,proto3" json:"unit_type_filter,omitempty"` // Filter by unit type
	Limit          int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`                                          // Maximum items to return
	Offset         int32                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`                                        // Pagination offset
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListInventoryItemsRequest) Reset() {
	*x = ListInventoryItemsRequest{}
	mi := &file_proto_inventory_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListInventoryItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInventoryItemsRequest) ProtoMessage() {}

func (x *ListInventoryItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInventoryItemsRequest.ProtoReflect.Descriptor instead.
func (*ListInventoryItemsRequest) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{20}
}

func (x *ListInventoryItemsRequest) GetLowStockOnly() bool {
	if x != nil {
		return x.LowStockOnly
	}
	return false
}

func (x *ListInventoryItemsRequest) GetUnitTypeFilter() string {
	if x != nil {
		return x.UnitTypeFilter
	}
	return ""
}

func (x *ListInventoryItemsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListInventoryItemsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListInventoryItemsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*InventoryItem       `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"` // Total items matching filter
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListInventoryItemsResponse) Reset() {
	*x = ListInventoryItemsResponse{}
	mi := &file_proto_inventory_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListInventoryItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInventoryItemsResponse) ProtoMessage() {}

func (x *ListInventoryItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInventoryItemsResponse.ProtoReflect.Descriptor instead.
func (*ListInventoryItemsResponse) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{21}
}

func (x *ListInventoryItemsResponse) GetItems() []*InventoryItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListInventoryItemsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// ConvertUnitsRequest converts quantities between units
type ConvertUnitsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Amount        float64                `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`                           // Quantity to convert
	FromUnitId    string                 `protobuf:"bytes,2,opt,name=from_unit_id,json=fromUnitId,proto3" json:"from_unit_id,omitempty"` // Source unit
	ToUnitId      string                 `protobuf:"bytes,3,opt,name=to_unit_id,json=toUnitId,proto3" json:"to_unit_id,omitempty"`       // Target unit
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConvertUnitsRequest) Reset() {
	*x = ConvertUnitsRequest{}
	mi := &file_proto_inventory_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConvertUnitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertUnitsRequest) ProtoMessage() {}

func (x *ConvertUnitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertUnitsRequest.ProtoReflect.Descriptor instead.
func (*ConvertUnitsRequest) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{22}
}

func (x *ConvertUnitsRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ConvertUnitsRequest) GetFromUnitId() string {
	if x != nil {
		return x.FromUnitId
	}
	return ""
}

func (x *ConvertUnitsRequest) GetToUnitId() string {
	if x != nil {
		return x.ToUnitId
	}
	return ""
}

type ConvertUnitsResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ConvertedAmount    float64                `protobuf:"fixed64,1,opt,name=converted_amount,json=convertedAmount,proto3" json:"converted_amount,omitempty"`         // Result of conversion
	ConversionPossible bool                   `protobuf:"varint,2,opt,name=conversion_possible,json=conversionPossible,proto3" json:"conversion_possible,omitempty"` // Whether conversion was possible
	ErrorMessage       string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`                    // Error if conversion failed
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ConvertUnitsResponse) Reset() {
	*x = ConvertUnitsResponse{}
	mi := &file_proto_inventory_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConvertUnitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertUnitsResponse) ProtoMessage() {}

func (x *ConvertUnitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertUnitsResponse.ProtoReflect.Descriptor instead.
func (*ConvertUnitsResponse) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{23}
}

func (x *ConvertUnitsResponse) GetConvertedAmount() float64 {
	if x != nil {
		return x.ConvertedAmount
	}
	return 0
}

func (x *ConvertUnitsResponse) GetConversionPossible() bool {
	if x != nil {
		return x.ConversionPossible
	}
	return false
}

func (x *ConvertUnitsResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// SubmitInventoryReportRequest submits a user report for training or updates
type SubmitInventoryReportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Report        *InventoryReport       `protobuf:"bytes,1,opt,name=report,proto3" json:"report,omitempty"` // Required: the inventory report
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitInventoryReportRequest) Reset() {
	*x = SubmitInventoryReportRequest{}
	mi := &file_proto_inventory_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitInventoryReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitInventoryReportRequest) ProtoMessage() {}

func (x *SubmitInventoryReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitInventoryReportRequest.ProtoReflect.Descriptor instead.
func (*SubmitInventoryReportRequest) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{24}
}

func (x *SubmitInventoryReportRequest) GetReport() *InventoryReport {
	if x != nil {
		return x.Report
	}
	return nil
}

type SubmitInventoryReportResponse struct {
	state           protoimpl.MessageState    `protogen:"open.v1"`
	TrainingUpdated bool                      `protobuf:"varint,1,opt,name=training_updated,json=trainingUpdated,proto3" json:"training_updated,omitempty"` // Whether training was affected
	TrainingStatus  *PredictionTrainingStatus `protobuf:"bytes,2,opt,name=training_status,json=trainingStatus,proto3" json:"training_status,omitempty"`     // Current training status
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SubmitInventoryReportResponse) Reset() {
	*x = SubmitInventoryReportResponse{}
	mi := &file_proto_inventory_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitInventoryReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitInventoryReportResponse) ProtoMessage() {}

func (x *SubmitInventoryReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitInventoryReportResponse.ProtoReflect.Descriptor instead.
func (*SubmitInventoryReportResponse) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{25}
}

func (x *SubmitInventoryReportResponse) GetTrainingUpdated() bool {
	if x != nil {
		return x.TrainingUpdated
	}
	return false
}

func (x *SubmitInventoryReportResponse) GetTrainingStatus() *PredictionTrainingStatus {
	if x != nil {
		return x.TrainingStatus
	}
	return nil
}

// GetPredictionTrainingStatusRequest retrieves training status
type GetPredictionTrainingStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemId        string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"` // Required: item identifier
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPredictionTrainingStatusRequest) Reset() {
	*x = GetPredictionTrainingStatusRequest{}
	mi := &file_proto_inventory_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPredictionTrainingStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPredictionTrainingStatusRequest) ProtoMessage() {}

func (x *GetPredictionTrainingStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPredictionTrainingStatusRequest.ProtoReflect.Descriptor instead.
func (*GetPredictionTrainingStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{26}
}

func (x *GetPredictionTrainingStatusRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

type GetPredictionTrainingStatusResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Status        *PredictionTrainingStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPredictionTrainingStatusResponse) Reset() {
	*x = GetPredictionTrainingStatusResponse{}
	mi := &file_proto_inventory_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPredictionTrainingStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPredictionTrainingStatusResponse) ProtoMessage() {}

func (x *GetPredictionTrainingStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPredictionTrainingStatusResponse.ProtoReflect.Descriptor instead.
func (*GetPredictionTrainingStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{27}
}

func (x *GetPredictionTrainingStatusResponse) GetStatus() *PredictionTrainingStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// StartTrainingRequest begins training for an item with a specific model
type StartTrainingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemId        string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`                                                                       // Required: item to train
	Model         PredictionModel        `protobuf:"varint,2,opt,name=model,proto3,enum=inventory.v1.PredictionModel" json:"model,omitempty"`                                                    // Model to use for training
	MinSamples    int32                  `protobuf:"varint,3,opt,name=min_samples,json=minSamples,proto3" json:"min_samples,omitempty"`                                                          // Minimum samples before training (default: 10)
	Parameters    map[string]float64     `protobuf:"bytes,4,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"` // Model-specific parameters
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartTrainingRequest) Reset() {
	*x = StartTrainingRequest{}
	mi := &file_proto_inventory_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartTrainingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTrainingRequest) ProtoMessage() {}

func (x *StartTrainingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTrainingRequest.ProtoReflect.Descriptor instead.
func (*StartTrainingRequest) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{28}
}

func (x *StartTrainingRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *StartTrainingRequest) GetModel() PredictionModel {
	if x != nil {
		return x.Model
	}
	return PredictionModel_PREDICTION_MODEL_UNSPECIFIED
}

func (x *StartTrainingRequest) GetMinSamples() int32 {
	if x != nil {
		return x.MinSamples
	}
	return 0
}

func (x *StartTrainingRequest) GetParameters() map[string]float64 {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type StartTrainingResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Status        *PredictionTrainingStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartTrainingResponse) Reset() {
	*x = StartTrainingResponse{}
	mi := &file_proto_inventory_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartTrainingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTrainingResponse) ProtoMessage() {}

func (x *StartTrainingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTrainingResponse.ProtoReflect.Descriptor instead.
func (*StartTrainingResponse) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{29}
}

func (x *StartTrainingResponse) GetStatus() *PredictionTrainingStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// GetAdvancedPredictionRequest generates detailed predictions with multiple models
type GetAdvancedPredictionRequest struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	ItemId                     string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`                                                                // Required: item to predict
	TargetTime                 *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=target_time,json=targetTime,proto3" json:"target_time,omitempty"`                                                    // When to predict for
	Models                     []PredictionModel      `protobuf:"varint,3,rep,packed,name=models,proto3,enum=inventory.v1.PredictionModel" json:"models,omitempty"`                                    // Models to use (empty = use best available)
	IncludeConfidenceIntervals bool                   `protobuf:"varint,4,opt,name=include_confidence_intervals,json=includeConfidenceIntervals,proto3" json:"include_confidence_intervals,omitempty"` // Whether to include bounds
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *GetAdvancedPredictionRequest) Reset() {
	*x = GetAdvancedPredictionRequest{}
	mi := &file_proto_inventory_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAdvancedPredictionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdvancedPredictionRequest) ProtoMessage() {}

func (x *GetAdvancedPredictionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdvancedPredictionRequest.ProtoReflect.Descriptor instead.
func (*GetAdvancedPredictionRequest) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{30}
}

func (x *GetAdvancedPredictionRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *GetAdvancedPredictionRequest) GetTargetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.TargetTime
	}
	return nil
}

func (x *GetAdvancedPredictionRequest) GetModels() []PredictionModel {
	if x != nil {
		return x.Models
	}
	return nil
}

func (x *GetAdvancedPredictionRequest) GetIncludeConfidenceIntervals() bool {
	if x != nil {
		return x.IncludeConfidenceIntervals
	}
	return false
}

type GetAdvancedPredictionResponse struct {
	state               protoimpl.MessageState   `protogen:"open.v1"`
	Predictions         []*ConsumptionPrediction `protobuf:"bytes,1,rep,name=predictions,proto3" json:"predictions,omitempty"`                                            // One per model
	ConsensusPrediction *ConsumptionPrediction   `protobuf:"bytes,2,opt,name=consensus_prediction,json=consensusPrediction,proto3" json:"consensus_prediction,omitempty"` // Ensemble prediction
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetAdvancedPredictionResponse) Reset() {
	*x = GetAdvancedPredictionResponse{}
	mi := &file_proto_inventory_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAdvancedPredictionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdvancedPredictionResponse) ProtoMessage() {}

func (x *GetAdvancedPredictionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdvancedPredictionResponse.ProtoReflect.Descriptor instead.
func (*GetAdvancedPredictionResponse) Descriptor() ([]byte, []int) {
	return file_proto_inventory_proto_rawDescGZIP(), []int{31}
}

func (x *GetAdvancedPredictionResponse) GetPredictions() []*ConsumptionPrediction {
	if x != nil {
		return x.Predictions
	}
	return nil
}

func (x *GetAdvancedPredictionResponse) GetConsensusPrediction() *ConsumptionPrediction {
	if x != nil {
		return x.ConsensusPrediction
	}
	return nil
}

var File_proto_inventory_proto protoreflect.FileDescriptor

const file_proto_inventory_proto_rawDesc = "" +
	"\n" +
	"\x15proto/inventory.proto\x12\finventory.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xc6\x01\n" +
	"\x04Unit\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06symbol\x18\x03 \x01(\tR\x06symbol\x12*\n" +
	"\x04type\x18\x04 \x01(\x0e2\x16.inventory.v1.UnitTypeR\x04type\x124\n" +
	"\x16base_conversion_factor\x18\x05 \x01(\x01R\x14baseConversionFactor\x12 \n" +
	"\fbase_unit_id\x18\x06 \x01(\tR\n" +
	"baseUnitId\"\x88\x02\n" +
	"\x13ConsumptionBehavior\x12:\n" +
	"\apattern\x18\x01 \x01(\x0e2 .inventory.v1.ConsumptionPatternR\apattern\x12/\n" +
	"\x14average_rate_per_day\x18\x02 \x01(\x01R\x11averageRatePerDay\x12\x1a\n" +
	"\bvariance\x18\x03 \x01(\x01R\bvariance\x12)\n" +
	"\x10seasonal_factors\x18\x04 \x03(\x01R\x0fseasonalFactors\x12=\n" +
	"\flast_updated\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated\"\xa7\x01\n" +
	"\x11ConsumptionRecord\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12'\n" +
	"\x0famount_consumed\x18\x02 \x01(\x01R\x0eamountConsumed\x12\x17\n" +
	"\aunit_id\x18\x03 \x01(\tR\x06unitId\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\"\xb6\x05\n" +
	"\rInventoryItem\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12#\n" +
	"\rcurrent_level\x18\x04 \x01(\x01R\fcurrentLevel\x12!\n" +
	"\fmax_capacity\x18\x05 \x01(\x01R\vmaxCapacity\x12.\n" +
	"\x13low_stock_threshold\x18\x06 \x01(\x01R\x11lowStockThreshold\x12\x17\n" +
	"\aunit_id\x18\a \x01(\tR\x06unitId\x12,\n" +
	"\x12alternate_unit_ids\x18\b \x03(\tR\x10alternateUnitIds\x12T\n" +
	"\x14consumption_behavior\x18\t \x01(\v2!.inventory.v1.ConsumptionBehaviorR\x13consumptionBehavior\x12P\n" +
	"\x13consumption_history\x18\n" +
	" \x03(\v2\x1f.inventory.v1.ConsumptionRecordR\x12consumptionHistory\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12E\n" +
	"\bmetadata\x18\r \x03(\v2).inventory.v1.InventoryItem.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa7\x02\n" +
	"\x0fInventoryStatus\x121\n" +
	"\x05items\x18\x01 \x03(\v2\x1b.inventory.v1.InventoryItemR\x05items\x12C\n" +
	"\x0flow_stock_items\x18\x02 \x03(\v2\x1b.inventory.v1.InventoryItemR\rlowStockItems\x12<\n" +
	"\vempty_items\x18\x03 \x03(\v2\x1b.inventory.v1.InventoryItemR\n" +
	"emptyItems\x12\x1f\n" +
	"\vtotal_items\x18\x04 \x01(\x05R\n" +
	"totalItems\x12=\n" +
	"\flast_updated\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated\"\xd0\x03\n" +
	"\x15ConsumptionPrediction\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\x128\n" +
	"\x18predicted_days_remaining\x18\x02 \x01(\x01R\x16predictedDaysRemaining\x12)\n" +
	"\x10confidence_score\x18\x03 \x01(\x01R\x0fconfidenceScore\x12L\n" +
	"\x14predicted_empty_date\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x12predictedEmptyDate\x12:\n" +
	"\x19recommended_restock_level\x18\x05 \x01(\x01R\x17recommendedRestockLevel\x12)\n" +
	"\x10prediction_model\x18\x06 \x01(\tR\x0fpredictionModel\x12\x1a\n" +
	"\bestimate\x18\a \x01(\x01R\bestimate\x12\x1f\n" +
	"\vlower_bound\x18\b \x01(\x01R\n" +
	"lowerBound\x12\x1f\n" +
	"\vupper_bound\x18\t \x01(\x01R\n" +
	"upperBound\x12&\n" +
	"\x0erecommendation\x18\n" +
	" \x01(\tR\x0erecommendation\"\xae\x05\n" +
	"\x18PredictionTrainingStatus\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\x121\n" +
	"\x05stage\x18\x02 \x01(\x0e2\x1b.inventory.v1.TrainingStageR\x05stage\x12@\n" +
	"\factive_model\x18\x03 \x01(\x0e2\x1d.inventory.v1.PredictionModelR\vactiveModel\x12H\n" +
	"\x10available_models\x18\x04 \x03(\x0e2\x1d.inventory.v1.PredictionModelR\x0favailableModels\x12)\n" +
	"\x10training_samples\x18\x05 \x01(\x05R\x0ftrainingSamples\x120\n" +
	"\x14min_samples_required\x18\x06 \x01(\x05R\x12minSamplesRequired\x12+\n" +
	"\x11training_accuracy\x18\a \x01(\x01R\x10trainingAccuracy\x12E\n" +
	"\x10training_started\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\x0ftrainingStarted\x12=\n" +
	"\flast_updated\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated\x12f\n" +
	"\x10model_parameters\x18\n" +
	" \x03(\v2;.inventory.v1.PredictionTrainingStatus.ModelParametersEntryR\x0fmodelParameters\x1aB\n" +
	"\x14ModelParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"\xdd\x02\n" +
	"\x0fInventoryReport\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x14\n" +
	"\x05level\x18\x03 \x01(\x01R\x05level\x12\x17\n" +
	"\aunit_id\x18\x04 \x01(\tR\x06unitId\x12\x18\n" +
	"\acontext\x18\x05 \x01(\tR\acontext\x12(\n" +
	"\x10is_training_data\x18\x06 \x01(\bR\x0eisTrainingData\x12G\n" +
	"\bmetadata\x18\a \x03(\v2+.inventory.v1.InventoryReport.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xee\x02\n" +
	"\x17AddInventoryItemRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12#\n" +
	"\rinitial_level\x18\x03 \x01(\x01R\finitialLevel\x12!\n" +
	"\fmax_capacity\x18\x04 \x01(\x01R\vmaxCapacity\x12.\n" +
	"\x13low_stock_threshold\x18\x05 \x01(\x01R\x11lowStockThreshold\x12\x17\n" +
	"\aunit_id\x18\x06 \x01(\tR\x06unitId\x12O\n" +
	"\bmetadata\x18\a \x03(\v23.inventory.v1.AddInventoryItemRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"K\n" +
	"\x18AddInventoryItemResponse\x12/\n" +
	"\x04item\x18\x01 \x01(\v2\x1b.inventory.v1.InventoryItemR\x04item\"\x9a\x01\n" +
	"\x1bUpdateInventoryLevelRequest\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\x12\x1b\n" +
	"\tnew_level\x18\x02 \x01(\x01R\bnewLevel\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\x12-\n" +
	"\x12record_consumption\x18\x04 \x01(\bR\x11recordConsumption\"\x9d\x01\n" +
	"\x1cUpdateInventoryLevelResponse\x12/\n" +
	"\x04item\x18\x01 \x01(\v2\x1b.inventory.v1.InventoryItemR\x04item\x12#\n" +
	"\rlevel_changed\x18\x02 \x01(\bR\flevelChanged\x12'\n" +
	"\x0fbelow_threshold\x18\x03 \x01(\bR\x0ebelowThreshold\"k\n" +
	"\x19GetInventoryStatusRequest\x123\n" +
	"\x16include_low_stock_only\x18\x01 \x01(\bR\x13includeLowStockOnly\x12\x19\n" +
	"\bitem_ids\x18\x02 \x03(\tR\aitemIds\"S\n" +
	"\x1aGetInventoryStatusResponse\x125\n" +
	"\x06status\x18\x01 \x01(\v2\x1d.inventory.v1.InventoryStatusR\x06status\"|\n" +
	"\x19PredictConsumptionRequest\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\x12\x1d\n" +
	"\n" +
	"days_ahead\x18\x02 \x01(\x05R\tdaysAhead\x12'\n" +
	"\x0fupdate_behavior\x18\x03 \x01(\bR\x0eupdateBehavior\"a\n" +
	"\x1aPredictConsumptionResponse\x12C\n" +
	"\n" +
	"prediction\x18\x01 \x01(\v2#.inventory.v1.ConsumptionPredictionR\n" +
	"prediction\"w\n" +
	"\x1dSetConsumptionBehaviorRequest\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\x12=\n" +
	"\bbehavior\x18\x02 \x01(\v2!.inventory.v1.ConsumptionBehaviorR\bbehavior\"Q\n" +
	"\x1eSetConsumptionBehaviorResponse\x12/\n" +
	"\x04item\x18\x01 \x01(\v2\x1b.inventory.v1.InventoryItemR\x04item\"2\n" +
	"\x17GetInventoryItemRequest\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\"K\n" +
	"\x18GetInventoryItemResponse\x12/\n" +
	"\x04item\x18\x01 \x01(\v2\x1b.inventory.v1.InventoryItemR\x04item\"\x99\x01\n" +
	"\x19ListInventoryItemsRequest\x12$\n" +
	"\x0elow_stock_only\x18\x01 \x01(\bR\flowStockOnly\x12(\n" +
	"\x10unit_type_filter\x18\x02 \x01(\tR\x0eunitTypeFilter\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x05R\x06offset\"p\n" +
	"\x1aListInventoryItemsResponse\x121\n" +
	"\x05items\x18\x01 \x03(\v2\x1b.inventory.v1.InventoryItemR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"m\n" +
	"\x13ConvertUnitsRequest\x12\x16\n" +
	"\x06amount\x18\x01 \x01(\x01R\x06amount\x12 \n" +
	"\ffrom_unit_id\x18\x02 \x01(\tR\n" +
	"fromUnitId\x12\x1c\n" +
	"\n" +
	"to_unit_id\x18\x03 \x01(\tR\btoUnitId\"\x97\x01\n" +
	"\x14ConvertUnitsResponse\x12)\n" +
	"\x10converted_amount\x18\x01 \x01(\x01R\x0fconvertedAmount\x12/\n" +
	"\x13conversion_possible\x18\x02 \x01(\bR\x12conversionPossible\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"U\n" +
	"\x1cSubmitInventoryReportRequest\x125\n" +
	"\x06report\x18\x01 \x01(\v2\x1d.inventory.v1.InventoryReportR\x06report\"\x9b\x01\n" +
	"\x1dSubmitInventoryReportResponse\x12)\n" +
	"\x10training_updated\x18\x01 \x01(\bR\x0ftrainingUpdated\x12O\n" +
	"\x0ftraining_status\x18\x02 \x01(\v2&.inventory.v1.PredictionTrainingStatusR\x0etrainingStatus\"=\n" +
	"\"GetPredictionTrainingStatusRequest\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\"e\n" +
	"#GetPredictionTrainingStatusResponse\x12>\n" +
	"\x06status\x18\x01 \x01(\v2&.inventory.v1.PredictionTrainingStatusR\x06status\"\x98\x02\n" +
	"\x14StartTrainingRequest\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\x123\n" +
	"\x05model\x18\x02 \x01(\x0e2\x1d.inventory.v1.PredictionModelR\x05model\x12\x1f\n" +
	"\vmin_samples\x18\x03 \x01(\x05R\n" +
	"minSamples\x12R\n" +
	"\n" +
	"parameters\x18\x04 \x03(\v22.inventory.v1.StartTrainingRequest.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"W\n" +
	"\x15StartTrainingResponse\x12>\n" +
	"\x06status\x18\x01 \x01(\v2&.inventory.v1.PredictionTrainingStatusR\x06status\"\xed\x01\n" +
	"\x1cGetAdvancedPredictionRequest\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\x12;\n" +
	"\vtarget_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"targetTime\x125\n" +
	"\x06models\x18\x03 \x03(\x0e2\x1d.inventory.v1.PredictionModelR\x06models\x12@\n" +
	"\x1cinclude_confidence_intervals\x18\x04 \x01(\bR\x1aincludeConfidenceIntervals\"\xbe\x01\n" +
	"\x1dGetAdvancedPredictionResponse\x12E\n" +
	"\vpredictions\x18\x01 \x03(\v2#.inventory.v1.ConsumptionPredictionR\vpredictions\x12V\n" +
	"\x14consensus_prediction\x18\x02 \x01(\v2#.inventory.v1.ConsumptionPredictionR\x13consensusPrediction*\x90\x01\n" +
	"\bUnitType\x12\x19\n" +
	"\x15UNIT_TYPE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10UNIT_TYPE_WEIGHT\x10\x01\x12\x14\n" +
	"\x10UNIT_TYPE_VOLUME\x10\x02\x12\x13\n" +
	"\x0fUNIT_TYPE_COUNT\x10\x03\x12\x14\n" +
	"\x10UNIT_TYPE_LENGTH\x10\x04\x12\x12\n" +
	"\x0eUNIT_TYPE_AREA\x10\x05*\xba\x01\n" +
	"\x12ConsumptionPattern\x12#\n" +
	"\x1fCONSUMPTION_PATTERN_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aCONSUMPTION_PATTERN_LINEAR\x10\x01\x12 \n" +
	"\x1cCONSUMPTION_PATTERN_SEASONAL\x10\x02\x12\x1d\n" +
	"\x19CONSUMPTION_PATTERN_BATCH\x10\x03\x12\x1e\n" +
	"\x1aCONSUMPTION_PATTERN_RANDOM\x10\x04*\xa6\x01\n" +
	"\rTrainingStage\x12\x1e\n" +
	"\x1aTRAINING_STAGE_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19TRAINING_STAGE_COLLECTING\x10\x01\x12\x1b\n" +
	"\x17TRAINING_STAGE_LEARNING\x10\x02\x12\x1a\n" +
	"\x16TRAINING_STAGE_TRAINED\x10\x03\x12\x1d\n" +
	"\x19TRAINING_STAGE_RETRAINING\x10\x04*\xf9\x01\n" +
	"\x0fPredictionModel\x12 \n" +
	"\x1cPREDICTION_MODEL_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17PREDICTION_MODEL_MARKOV\x10\x01\x12\x1c\n" +
	"\x18PREDICTION_MODEL_CROSTON\x10\x02\x12\"\n" +
	"\x1ePREDICTION_MODEL_DRIFT_IMPULSE\x10\x03\x12\x1d\n" +
	"\x19PREDICTION_MODEL_BAYESIAN\x10\x04\x12\"\n" +
	"\x1ePREDICTION_MODEL_MEMORY_WINDOW\x10\x05\x12\"\n" +
	"\x1ePREDICTION_MODEL_EVENT_TRIGGER\x10\x062\x91\n" +
	"\n" +
	"\x10InventoryService\x12a\n" +
	"\x10AddInventoryItem\x12%.inventory.v1.AddInventoryItemRequest\x1a&.inventory.v1.AddInventoryItemResponse\x12a\n" +
	"\x10GetInventoryItem\x12%.inventory.v1.GetInventoryItemRequest\x1a&.inventory.v1.GetInventoryItemResponse\x12g\n" +
	"\x12ListInventoryItems\x12'.inventory.v1.ListInventoryItemsRequest\x1a(.inventory.v1.ListInventoryItemsResponse\x12m\n" +
	"\x14UpdateInventoryLevel\x12).inventory.v1.UpdateInventoryLevelRequest\x1a*.inventory.v1.UpdateInventoryLevelResponse\x12g\n" +
	"\x12GetInventoryStatus\x12'.inventory.v1.GetInventoryStatusRequest\x1a(.inventory.v1.GetInventoryStatusResponse\x12g\n" +
	"\x12PredictConsumption\x12'.inventory.v1.PredictConsumptionRequest\x1a(.inventory.v1.PredictConsumptionResponse\x12s\n" +
	"\x16SetConsumptionBehavior\x12+.inventory.v1.SetConsumptionBehaviorRequest\x1a,.inventory.v1.SetConsumptionBehaviorResponse\x12p\n" +
	"\x15SubmitInventoryReport\x12*.inventory.v1.SubmitInventoryReportRequest\x1a+.inventory.v1.SubmitInventoryReportResponse\x12\x82\x01\n" +
	"\x1bGetPredictionTrainingStatus\x120.inventory.v1.GetPredictionTrainingStatusRequest\x1a1.inventory.v1.GetPredictionTrainingStatusResponse\x12X\n" +
	"\rStartTraining\x12\".inventory.v1.StartTrainingRequest\x1a#.inventory.v1.StartTrainingResponse\x12p\n" +
	"\x15GetAdvancedPrediction\x12*.inventory.v1.GetAdvancedPredictionRequest\x1a+.inventory.v1.GetAdvancedPredictionResponse\x12U\n" +
	"\fConvertUnits\x12!.inventory.v1.ConvertUnitsRequest\x1a\".inventory.v1.ConvertUnitsResponseBDZBgithub.com/DaDevFox/task-systems/inventory-core/proto/inventory/v1b\x06proto3"

var (
	file_proto_inventory_proto_rawDescOnce sync.Once
	file_proto_inventory_proto_rawDescData []byte
)

func file_proto_inventory_proto_rawDescGZIP() []byte {
	file_proto_inventory_proto_rawDescOnce.Do(func() {
		file_proto_inventory_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_inventory_proto_rawDesc), len(file_proto_inventory_proto_rawDesc)))
	})
	return file_proto_inventory_proto_rawDescData
}

var file_proto_inventory_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_inventory_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_proto_inventory_proto_goTypes = []any{
	(UnitType)(0),                               // 0: inventory.v1.UnitType
	(ConsumptionPattern)(0),                     // 1: inventory.v1.ConsumptionPattern
	(TrainingStage)(0),                          // 2: inventory.v1.TrainingStage
	(PredictionModel)(0),                        // 3: inventory.v1.PredictionModel
	(*Unit)(nil),                                // 4: inventory.v1.Unit
	(*ConsumptionBehavior)(nil),                 // 5: inventory.v1.ConsumptionBehavior
	(*ConsumptionRecord)(nil),                   // 6: inventory.v1.ConsumptionRecord
	(*InventoryItem)(nil),                       // 7: inventory.v1.InventoryItem
	(*InventoryStatus)(nil),                     // 8: inventory.v1.InventoryStatus
	(*ConsumptionPrediction)(nil),               // 9: inventory.v1.ConsumptionPrediction
	(*PredictionTrainingStatus)(nil),            // 10: inventory.v1.PredictionTrainingStatus
	(*InventoryReport)(nil),                     // 11: inventory.v1.InventoryReport
	(*AddInventoryItemRequest)(nil),             // 12: inventory.v1.AddInventoryItemRequest
	(*AddInventoryItemResponse)(nil),            // 13: inventory.v1.AddInventoryItemResponse
	(*UpdateInventoryLevelRequest)(nil),         // 14: inventory.v1.UpdateInventoryLevelRequest
	(*UpdateInventoryLevelResponse)(nil),        // 15: inventory.v1.UpdateInventoryLevelResponse
	(*GetInventoryStatusRequest)(nil),           // 16: inventory.v1.GetInventoryStatusRequest
	(*GetInventoryStatusResponse)(nil),          // 17: inventory.v1.GetInventoryStatusResponse
	(*PredictConsumptionRequest)(nil),           // 18: inventory.v1.PredictConsumptionRequest
	(*PredictConsumptionResponse)(nil),          // 19: inventory.v1.PredictConsumptionResponse
	(*SetConsumptionBehaviorRequest)(nil),       // 20: inventory.v1.SetConsumptionBehaviorRequest
	(*SetConsumptionBehaviorResponse)(nil),      // 21: inventory.v1.SetConsumptionBehaviorResponse
	(*GetInventoryItemRequest)(nil),             // 22: inventory.v1.GetInventoryItemRequest
	(*GetInventoryItemResponse)(nil),            // 23: inventory.v1.GetInventoryItemResponse
	(*ListInventoryItemsRequest)(nil),           // 24: inventory.v1.ListInventoryItemsRequest
	(*ListInventoryItemsResponse)(nil),          // 25: inventory.v1.ListInventoryItemsResponse
	(*ConvertUnitsRequest)(nil),                 // 26: inventory.v1.ConvertUnitsRequest
	(*ConvertUnitsResponse)(nil),                // 27: inventory.v1.ConvertUnitsResponse
	(*SubmitInventoryReportRequest)(nil),        // 28: inventory.v1.SubmitInventoryReportRequest
	(*SubmitInventoryReportResponse)(nil),       // 29: inventory.v1.SubmitInventoryReportResponse
	(*GetPredictionTrainingStatusRequest)(nil),  // 30: inventory.v1.GetPredictionTrainingStatusRequest
	(*GetPredictionTrainingStatusResponse)(nil), // 31: inventory.v1.GetPredictionTrainingStatusResponse
	(*StartTrainingRequest)(nil),                // 32: inventory.v1.StartTrainingRequest
	(*StartTrainingResponse)(nil),               // 33: inventory.v1.StartTrainingResponse
	(*GetAdvancedPredictionRequest)(nil),        // 34: inventory.v1.GetAdvancedPredictionRequest
	(*GetAdvancedPredictionResponse)(nil),       // 35: inventory.v1.GetAdvancedPredictionResponse
	nil,                                         // 36: inventory.v1.InventoryItem.MetadataEntry
	nil,                                         // 37: inventory.v1.PredictionTrainingStatus.ModelParametersEntry
	nil,                                         // 38: inventory.v1.InventoryReport.MetadataEntry
	nil,                                         // 39: inventory.v1.AddInventoryItemRequest.MetadataEntry
	nil,                                         // 40: inventory.v1.StartTrainingRequest.ParametersEntry
	(*timestamppb.Timestamp)(nil),               // 41: google.protobuf.Timestamp
}
var file_proto_inventory_proto_depIdxs = []int32{
	0,  // 0: inventory.v1.Unit.type:type_name -> inventory.v1.UnitType
	1,  // 1: inventory.v1.ConsumptionBehavior.pattern:type_name -> inventory.v1.ConsumptionPattern
	41, // 2: inventory.v1.ConsumptionBehavior.last_updated:type_name -> google.protobuf.Timestamp
	41, // 3: inventory.v1.ConsumptionRecord.timestamp:type_name -> google.protobuf.Timestamp
	5,  // 4: inventory.v1.InventoryItem.consumption_behavior:type_name -> inventory.v1.ConsumptionBehavior
	6,  // 5: inventory.v1.InventoryItem.consumption_history:type_name -> inventory.v1.ConsumptionRecord
	41, // 6: inventory.v1.InventoryItem.created_at:type_name -> google.protobuf.Timestamp
	41, // 7: inventory.v1.InventoryItem.updated_at:type_name -> google.protobuf.Timestamp
	36, // 8: inventory.v1.InventoryItem.metadata:type_name -> inventory.v1.InventoryItem.MetadataEntry
	7,  // 9: inventory.v1.InventoryStatus.items:type_name -> inventory.v1.InventoryItem
	7,  // 10: inventory.v1.InventoryStatus.low_stock_items:type_name -> inventory.v1.InventoryItem
	7,  // 11: inventory.v1.InventoryStatus.empty_items:type_name -> inventory.v1.InventoryItem
	41, // 12: inventory.v1.InventoryStatus.last_updated:type_name -> google.protobuf.Timestamp
	41, // 13: inventory.v1.ConsumptionPrediction.predicted_empty_date:type_name -> google.protobuf.Timestamp
	2,  // 14: inventory.v1.PredictionTrainingStatus.stage:type_name -> inventory.v1.TrainingStage
	3,  // 15: inventory.v1.PredictionTrainingStatus.active_model:type_name -> inventory.v1.PredictionModel
	3,  // 16: inventory.v1.PredictionTrainingStatus.available_models:type_name -> inventory.v1.PredictionModel
	41, // 17: inventory.v1.PredictionTrainingStatus.training_started:type_name -> google.protobuf.Timestamp
	41, // 18: inventory.v1.PredictionTrainingStatus.last_updated:type_name -> google.protobuf.Timestamp
	37, // 19: inventory.v1.PredictionTrainingStatus.model_parameters:type_name -> inventory.v1.PredictionTrainingStatus.ModelParametersEntry
	41, // 20: inventory.v1.InventoryReport.timestamp:type_name -> google.protobuf.Timestamp
	38, // 21: inventory.v1.InventoryReport.metadata:type_name -> inventory.v1.InventoryReport.MetadataEntry
	39, // 22: inventory.v1.AddInventoryItemRequest.metadata:type_name -> inventory.v1.AddInventoryItemRequest.MetadataEntry
	7,  // 23: inventory.v1.AddInventoryItemResponse.item:type_name -> inventory.v1.InventoryItem
	7,  // 24: inventory.v1.UpdateInventoryLevelResponse.item:type_name -> inventory.v1.InventoryItem
	8,  // 25: inventory.v1.GetInventoryStatusResponse.status:type_name -> inventory.v1.InventoryStatus
	9,  // 26: inventory.v1.PredictConsumptionResponse.prediction:type_name -> inventory.v1.ConsumptionPrediction
	5,  // 27: inventory.v1.SetConsumptionBehaviorRequest.behavior:type_name -> inventory.v1.ConsumptionBehavior
	7,  // 28: inventory.v1.SetConsumptionBehaviorResponse.item:type_name -> inventory.v1.InventoryItem
	7,  // 29: inventory.v1.GetInventoryItemResponse.item:type_name -> inventory.v1.InventoryItem
	7,  // 30: inventory.v1.ListInventoryItemsResponse.items:type_name -> inventory.v1.InventoryItem
	11, // 31: inventory.v1.SubmitInventoryReportRequest.report:type_name -> inventory.v1.InventoryReport
	10, // 32: inventory.v1.SubmitInventoryReportResponse.training_status:type_name -> inventory.v1.PredictionTrainingStatus
	10, // 33: inventory.v1.GetPredictionTrainingStatusResponse.status:type_name -> inventory.v1.PredictionTrainingStatus
	3,  // 34: inventory.v1.StartTrainingRequest.model:type_name -> inventory.v1.PredictionModel
	40, // 35: inventory.v1.StartTrainingRequest.parameters:type_name -> inventory.v1.StartTrainingRequest.ParametersEntry
	10, // 36: inventory.v1.StartTrainingResponse.status:type_name -> inventory.v1.PredictionTrainingStatus
	41, // 37: inventory.v1.GetAdvancedPredictionRequest.target_time:type_name -> google.protobuf.Timestamp
	3,  // 38: inventory.v1.GetAdvancedPredictionRequest.models:type_name -> inventory.v1.PredictionModel
	9,  // 39: inventory.v1.GetAdvancedPredictionResponse.predictions:type_name -> inventory.v1.ConsumptionPrediction
	9,  // 40: inventory.v1.GetAdvancedPredictionResponse.consensus_prediction:type_name -> inventory.v1.ConsumptionPrediction
	12, // 41: inventory.v1.InventoryService.AddInventoryItem:input_type -> inventory.v1.AddInventoryItemRequest
	22, // 42: inventory.v1.InventoryService.GetInventoryItem:input_type -> inventory.v1.GetInventoryItemRequest
	24, // 43: inventory.v1.InventoryService.ListInventoryItems:input_type -> inventory.v1.ListInventoryItemsRequest
	14, // 44: inventory.v1.InventoryService.UpdateInventoryLevel:input_type -> inventory.v1.UpdateInventoryLevelRequest
	16, // 45: inventory.v1.InventoryService.GetInventoryStatus:input_type -> inventory.v1.GetInventoryStatusRequest
	18, // 46: inventory.v1.InventoryService.PredictConsumption:input_type -> inventory.v1.PredictConsumptionRequest
	20, // 47: inventory.v1.InventoryService.SetConsumptionBehavior:input_type -> inventory.v1.SetConsumptionBehaviorRequest
	28, // 48: inventory.v1.InventoryService.SubmitInventoryReport:input_type -> inventory.v1.SubmitInventoryReportRequest
	30, // 49: inventory.v1.InventoryService.GetPredictionTrainingStatus:input_type -> inventory.v1.GetPredictionTrainingStatusRequest
	32, // 50: inventory.v1.InventoryService.StartTraining:input_type -> inventory.v1.StartTrainingRequest
	34, // 51: inventory.v1.InventoryService.GetAdvancedPrediction:input_type -> inventory.v1.GetAdvancedPredictionRequest
	26, // 52: inventory.v1.InventoryService.ConvertUnits:input_type -> inventory.v1.ConvertUnitsRequest
	13, // 53: inventory.v1.InventoryService.AddInventoryItem:output_type -> inventory.v1.AddInventoryItemResponse
	23, // 54: inventory.v1.InventoryService.GetInventoryItem:output_type -> inventory.v1.GetInventoryItemResponse
	25, // 55: inventory.v1.InventoryService.ListInventoryItems:output_type -> inventory.v1.ListInventoryItemsResponse
	15, // 56: inventory.v1.InventoryService.UpdateInventoryLevel:output_type -> inventory.v1.UpdateInventoryLevelResponse
	17, // 57: inventory.v1.InventoryService.GetInventoryStatus:output_type -> inventory.v1.GetInventoryStatusResponse
	19, // 58: inventory.v1.InventoryService.PredictConsumption:output_type -> inventory.v1.PredictConsumptionResponse
	21, // 59: inventory.v1.InventoryService.SetConsumptionBehavior:output_type -> inventory.v1.SetConsumptionBehaviorResponse
	29, // 60: inventory.v1.InventoryService.SubmitInventoryReport:output_type -> inventory.v1.SubmitInventoryReportResponse
	31, // 61: inventory.v1.InventoryService.GetPredictionTrainingStatus:output_type -> inventory.v1.GetPredictionTrainingStatusResponse
	33, // 62: inventory.v1.InventoryService.StartTraining:output_type -> inventory.v1.StartTrainingResponse
	35, // 63: inventory.v1.InventoryService.GetAdvancedPrediction:output_type -> inventory.v1.GetAdvancedPredictionResponse
	27, // 64: inventory.v1.InventoryService.ConvertUnits:output_type -> inventory.v1.ConvertUnitsResponse
	53, // [53:65] is the sub-list for method output_type
	41, // [41:53] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_proto_inventory_proto_init() }
func file_proto_inventory_proto_init() {
	if File_proto_inventory_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_inventory_proto_rawDesc), len(file_proto_inventory_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_inventory_proto_goTypes,
		DependencyIndexes: file_proto_inventory_proto_depIdxs,
		EnumInfos:         file_proto_inventory_proto_enumTypes,
		MessageInfos:      file_proto_inventory_proto_msgTypes,
	}.Build()
	File_proto_inventory_proto = out.File
	file_proto_inventory_proto_goTypes = nil
	file_proto_inventory_proto_depIdxs = nil
}
