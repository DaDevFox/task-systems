syntax = "proto3";

package hometasker.v1;

import "google/protobuf/duration.proto";

option go_package = "goproto/v1";

enum Comparison {
  COMPARISON_UNSPECIFIED = 0;
  COMPARISON_LESS_THAN = 1;
  COMPARISON_GREATER_THAN = 2;
  COMPARISON_EQUALS = 3;
}

enum Operand {
  OPERAND_UNSPECIFIED = 0;
  OPERAND_ADD = 1;
  OPERAND_SUBTRACT = 2;
  OPERAND_DIVIDE = 3;
  OPERAND_MULTIPLY = 4;
  OPERAND_SET = 5; // set the pile to a specific value
}

message MealPlanAction {
  // indicates invocation of requirement to assignee to fill out the next week's meal plan
}

// TODO: add more special actions
message Action {
  oneof action {
    MealPlanAction meal_plan = 1; // Action to be performed on the meal plan, if applicable
  }
}

message ModifyPileResult {
  string pile_id = 1; // ID of the pile that was updated
  Operand operand = 2; // Operation that was performed on the pile
  int32 value = 3;
}

// TODO: add more result types
message Result {
  oneof result {
    ModifyPileResult modify_pile = 1; // Result of modifying a pile
  }
}

// string substitutions:
// pile_id: %pile_id%
// pile_display_name: %pile_display_name%
// pile_description: %pile_description%
message Task {
  string display_name = 1;
  string display_description = 2;
  optional Action action = 3; // Action to be performed on the meal plan, if applicable
  optional Result result = 4; // Result of the task, if applicable
}

message NewAssigneeOrSameAsPrevious {}

message NewAssignee {}

message GroupAssignees{
  int32 total_capacity = 1; // Desired total capacity of the group of assignees
}

message TaskAssignment {
  oneof assignment {
    NewAssigneeOrSameAsPrevious new_assignee_or_same_as_previous = 1; // Assign to a new assignee or the same as previous
    NewAssignee new_assignee = 2; // Assign to a new assignee
    GroupAssignees group_assignees = 3; // Assign to a group of assignees with a total capacity
  }
}

message TaskStep {
  Task task = 1; // Task to be executed in this step
  TaskAssignment assignment_behavior = 2; // Assignment
  bool require_review = 3; // If true, the task must be reviewed after completion and before proceeding to the next
  optional google.protobuf.Duration start_delay = 4; // Optoinal delay before task step commencement
  optional google.protobuf.Duration end_delay = 5; // Optional delay after task step completion before proceeding
}

message Trigger {
  repeated TriggerCondition condition = 1; // Condition that must be met for the trigger to fire
  // task that will be fired into assignee pool as a result of this trigger
  repeated TaskStep steps = 2; // Steps to be executed in this trigger
}

message TriggerCondition {
  oneof condition {
    TriggerWeeklyScheduleCondition weekly_schedule = 1; // Trigger based on a weekly schedule
    TriggerIntervalCondition interval = 2; // Trigger based on a time interval
    TriggerPileThresholdCondition pile_threshold = 3; // Trigger based on a pile threshold
  }
}

message TriggerWeeklyScheduleCondition {
  enum Day {
    DAY_MONDAY = 0;
    DAY_TUESDAY = 1;
    DAY_WEDNESDAY = 2;
    DAY_THURSDAY = 3;
    DAY_FRIDAY = 4;
    DAY_SATURDAY = 5;
    DAY_SUNDAY = 6;
  }

  Day day = 1; // Day of the week when the trigger will be fired
  int32 seconds_since_midnight = 2;
}

message TriggerIntervalCondition {
  google.protobuf.Duration interval = 1; // Interval after which the trigger will be fired
}

message TriggerPileThresholdCondition {
  string pile_id = 1; // ID of the pile to monitor
  Comparison comparison = 2; // Comparison to perform on the pile value
  int32 threshold = 3; // Threshold value to trigger the task
}

// Slot for a user in a pool from which users can be selected
message UserSlot {
  string id = 1;
  // Enforces a priority to ranked decisions e.g. for reviewer pools
  // assumed 1 if not present
  optional int32 priority = 2;
  // Describes the user's capacity or expertise (a total weight may be required to form a group of workers)
  // assumed 1 if not present
  optional int32 weight = 3;
}

message TaskSystem {
  string id = 1;
  string display_name = 2;
  repeated UserSlot assignee_pool = 3;
  repeated UserSlot reviewer_pool = 4;
  repeated Trigger triggers = 5; // Triggers that will fire tasks in this system (using the assignees adn reviewers affiliated)
}

message TaskRecord {
  enum Status {
    STATUS_PENDING = 0;
    STATUS_DONE = 1;
    STATUS_REVIEWED = 2;
  }

  string id = 1;
  string task = 2;
  string assignee = 3;
  string reviewer = 4;
  Status status = 5;
  int64 assigned_at = 6;
  int64 completed_at = 7;
  float efficiency = 8;
  bool on_time = 9;
}
