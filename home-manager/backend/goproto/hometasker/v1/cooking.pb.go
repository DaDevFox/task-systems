// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: cooking.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Recipe struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Ingredients   []*Ingredient          `protobuf:"bytes,2,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
	Instructions  string                 `protobuf:"bytes,3,opt,name=instructions,proto3" json:"instructions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Recipe) Reset() {
	*x = Recipe{}
	mi := &file_cooking_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Recipe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recipe) ProtoMessage() {}

func (x *Recipe) ProtoReflect() protoreflect.Message {
	mi := &file_cooking_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recipe.ProtoReflect.Descriptor instead.
func (*Recipe) Descriptor() ([]byte, []int) {
	return file_cooking_proto_rawDescGZIP(), []int{0}
}

func (x *Recipe) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Recipe) GetIngredients() []*Ingredient {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

func (x *Recipe) GetInstructions() string {
	if x != nil {
		return x.Instructions
	}
	return ""
}

type Ingredient struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Unit          string                 `protobuf:"bytes,2,opt,name=unit,proto3" json:"unit,omitempty"`
	Quantity      float32                `protobuf:"fixed32,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ingredient) Reset() {
	*x = Ingredient{}
	mi := &file_cooking_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ingredient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ingredient) ProtoMessage() {}

func (x *Ingredient) ProtoReflect() protoreflect.Message {
	mi := &file_cooking_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ingredient.ProtoReflect.Descriptor instead.
func (*Ingredient) Descriptor() ([]byte, []int) {
	return file_cooking_proto_rawDescGZIP(), []int{1}
}

func (x *Ingredient) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Ingredient) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *Ingredient) GetQuantity() float32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type MealPlan struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MealPlan) Reset() {
	*x = MealPlan{}
	mi := &file_cooking_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MealPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MealPlan) ProtoMessage() {}

func (x *MealPlan) ProtoReflect() protoreflect.Message {
	mi := &file_cooking_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MealPlan.ProtoReflect.Descriptor instead.
func (*MealPlan) Descriptor() ([]byte, []int) {
	return file_cooking_proto_rawDescGZIP(), []int{2}
}

var File_cooking_proto protoreflect.FileDescriptor

const file_cooking_proto_rawDesc = "" +
	"\n" +
	"\rcooking.proto\x12\rhometasker.v1\"}\n" +
	"\x06Recipe\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12;\n" +
	"\vingredients\x18\x02 \x03(\v2\x19.hometasker.v1.IngredientR\vingredients\x12\"\n" +
	"\finstructions\x18\x03 \x01(\tR\finstructions\"P\n" +
	"\n" +
	"Ingredient\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04unit\x18\x02 \x01(\tR\x04unit\x12\x1a\n" +
	"\bquantity\x18\x03 \x01(\x02R\bquantity\"\n" +
	"\n" +
	"\bMealPlanB\x0fZ\rhometasker/v1b\x06proto3"

var (
	file_cooking_proto_rawDescOnce sync.Once
	file_cooking_proto_rawDescData []byte
)

func file_cooking_proto_rawDescGZIP() []byte {
	file_cooking_proto_rawDescOnce.Do(func() {
		file_cooking_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cooking_proto_rawDesc), len(file_cooking_proto_rawDesc)))
	})
	return file_cooking_proto_rawDescData
}

var file_cooking_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_cooking_proto_goTypes = []any{
	(*Recipe)(nil),     // 0: hometasker.v1.Recipe
	(*Ingredient)(nil), // 1: hometasker.v1.Ingredient
	(*MealPlan)(nil),   // 2: hometasker.v1.MealPlan
}
var file_cooking_proto_depIdxs = []int32{
	1, // 0: hometasker.v1.Recipe.ingredients:type_name -> hometasker.v1.Ingredient
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_cooking_proto_init() }
func file_cooking_proto_init() {
	if File_cooking_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cooking_proto_rawDesc), len(file_cooking_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cooking_proto_goTypes,
		DependencyIndexes: file_cooking_proto_depIdxs,
		MessageInfos:      file_cooking_proto_msgTypes,
	}.Build()
	File_cooking_proto = out.File
	file_cooking_proto_goTypes = nil
	file_cooking_proto_depIdxs = nil
}
